<%- include("../partials/head") %>
<%- include("../partials/leftSidebar") %>
<%- include("../partials/header") %>
<!--Notificaion icon-->
<!--HEADER END-->

<div class="main-content">
    <!--DASHBOARD CONTENT START-->
    <div class="breadcrumbs-container">
    
        <ul class="breadcrumb">
            <% if(breadcrumbs){%> <% for (let crumbs of breadcrumbs){%>
                <li><a href="<%- crumbs.url%>"><%- crumbs.name%></a></li>
                <%} }%>
        </ul>
    </div>


    <%- include("../partials/roomSubMenu") %>


    <div class="card table-card">
        <div class="card-header table-card-header text-uppercase d-flex align-items-center justify-content-between">
            <div>
                <h5>ROOM TRANSACTION TYPES List</h5>
            </div>
            <div>
                <button type="button" class="btn add-btn ms-auto" data-bs-toggle="modal"
                    data-bs-target="#add-roomtransaction-stages-modal">
                    <i class="fas fa-plus"></i></button>
                
            </div>
        </div>

        <div class="card-body table-responsive">
            <div class="table-searchbar-container"><button type="button"><i class="fas fa-search"></i> </button><input
                    type="search" id="searchkeyword" placeholder="Enter keywords" class="table-searchbar"></div>
            <table class="table custom_row" id="roomTransactionTable">
                <thead>
                    <th>Sr No.</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Action</th>
                    
                </thead>
                <tbody>
                    <% let count = 1%>
                    <% roomTransactionTypeList.map(list=>{%>
                    <tr>
                        <td><%- count++ %></td>
                        <td><%- list.name %></td>
                        <td><%- list.description %></td>
                        <td>
                            <i class="fas fa-edit text-dark cursor-pointer edit-roomtransaction-type"
                                data-roomtransaction-stages-id="<%- list.rtsid %>"></i>
                        </td>
                        
                    </tr>
                    <%})%>
                </tbody>
            </table>
            <div class="d-flex justify-content-between">
                <div>
                    <p>Total entries:<%- pageCount %>
                    </p>
                </div>
                <div>
                    <p id="pagination"></p>
                </div>
            </div>
        </div>
    </div>
</div>
<!--DASHBOARD CONTENT END-->

<!-- Modal -->
<div class="modal fade" id="add-roomtransaction-stages-modal" tabindex="-1"
    aria-labelledby="add-roomtransaction-stages-modal" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content modal-inputform">
            <div class="modal-header modal-inputform-header">
                <h5 class="modal-title" id="add-roomtransaction-stages-title">ADD ROOM TRANSACTION TYPES</h5>
                <button type="button" class="btn fs-4" data-bs-dismiss="modal" aria-label="Close"><i
                        class="fas fa-times"></i></button>
            </div>
            <div class="modal-body">
                <div id="errorHtml"></div>
                <div class="table-responsive">
                    <table class="table " id="add-more-roomtransaction-types-table">
                        <thead>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Action</th>
                        </thead>
                        <tbody>
                            <tr>
                                <td> <input type="text" class="form-control" id="name" name="name"
                                        placeholder="Enter Name">
                                    <input type="hidden" id="Id" name="Id">

                                </td>
                                <td>
                                    <textarea class="form-control" rows="1" id="description" name="description"
                                        placeholder="Enter Description"></textarea>
                                </td>
                                <td>
                                    <i class="far fa-edit d-none"></i>
                                    <i class="fas fa-trash-alt text-danger cursor-pointer removefaculty"></i>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success  btn-sm" id="add-more-roomtransaction-types"><i class="fas fa-plus"></i> Add More</button>
                <button type="submit" class="btn  createRoomTransactionTypes modal-inputform-btn">Create</button>
                <button type="submit" class="btn  updateRoomTransactionTypes modal-inputform-btn d-none">Update</button>
            </div>
        </div>
    </div>


    <%- include('../partials/notification') %>
    <%- include('../partials/alert') %>
    <%- include("../partials/footer") %>
    <script src="https://cdn.rawgit.com/botmonster/jquery-bootpag/master/lib/jquery.bootpag.min.js"></script>
    <script src="/js/leftsidebartoggle.js"></script>
    <script>
        $(document).ready(function () {

            // Add more rows
            $('#add-more-roomtransaction-types').on('click', function () {
                console.log("Room Added::::")
                let lastTr = $('#add-more-roomtransaction-types-table tbody tr:last-child')
                let name = lastTr.find(`select[name='name']`).val()
                let description = lastTr.find(`select[name='description']`).val()
                let clonedTr = lastTr.clone();
                clonedTr.find(`input[name='name']`).val('')
                clonedTr.find(`input[name='description']`).val('')
                $('#add-more-roomtransaction-types-table tbody').append(clonedTr)
            })

            $('#add-more-roomtransaction-types-table').on('click', '.removefaculty', function () {
                let trLength = $('#add-more-roomtransaction-types-table tbody tr').length;
                if (trLength > 1) {
                    $(this).closest('tr').remove()
                } else {
                    alert('Cannot delete this room.')
                }
            })

            //Create 
            $(".createRoomTransactionTypes").on('click', function () {
                console.log('room added 2')
                let transactionElems = $('#add-more-roomtransaction-types-table tbody tr');
                let transCount = transactionElems.length;
                let transJson = [];
                transactionElems.each(function (index, elem) {
                    let name = $(elem).find(`input[name='name']`).val()
                    let description = $(elem).find(`textarea[name='description']`).val();

                    if (index < transCount - 1) {
                        let obj = {
                            name: name,
                            description: description
                        }
                        transJson.push(obj)
                    } else {
                        let obj = {
                            name: name,
                            description: description
                        }
                        transJson.push(obj)
                    }
                })

                let ApiObj = {
                    type: 'POST',
                    url: '/management/rooms/bookings/transaction-types/create',
                    data: {
                        inputJSON: JSON.stringify(transJson)
                    },
                    dataType: 'JSON'
                }

                ajaxApi(ApiObj).then(result => {
                    // location.reload()
                    showSuccess(result);
                }).catch(error => {
                    showError(error.responseJSON)
                })
            })

            //Edit
            $('#roomTransactionTable').on('click', '.edit-roomtransaction-type', function () {
                $(".createRoomTransactionTypes").addClass('d-none')
                $(".updateRoomTransactionTypes").removeClass('d-none')
                $("#add-roomtransaction-stages-title").html(`UPDATE ROOM TRANSACTION TYPES`)

                console.log('id::::::::::::::::',$(this).attr("data-roomtransaction-stages-id"))

                let ApiObj = {
                    type: 'POST',
                    url: '/management/rooms/bookings/transaction-types/findone',
                    dataType: 'JSON',
                    data: {
                        Id: $(this).attr("data-roomtransaction-stages-id")
                    },
                   
                }


                ajaxApi(ApiObj).then(result => {
                    let room = result.data
                    $('#Id').val(room.rtsid),
                        $('#name').val(room.rtsName),
                        $('#description').val(room.description),
                        $("#add-roomtransaction-stages-modal").modal('show')
                }).catch(error => {
                    showError(error.responseJSON)
                })

            })


            //Update 
            $(".updateRoomTransactionTypes").on('click', function () {
                let transactionElems = $('#add-more-roomtransaction-types-table tbody tr');
                let transCount = transactionElems.length;
                let transJson = [];
                transactionElems.each(function (index, elem) {
                    let name = $(elem).find(`input[name='name']`).val()
                    let description = $(elem).find(`textarea[name='description']`).val();

                    let id = $(elem).find(`input[name='Id']`).val();
                    if (index < transCount - 1) {
                        let obj = {
                            id: id,
                            name: name,
                            description: description,

                        }
                        transJson.push(obj)
                    } else {
                        let obj = {
                            id: id,
                            name: name,
                            description: description,
                        }
                        transJson.push(obj)
                    }
                })

                console.log('JSON', JSON.stringify(transJson))

                let ApiObj = {
                    type: 'POST',
                    url: '/management/rooms/bookings/transaction-types/update',
                    data: {
                        inputJSON: JSON.stringify(transJson)
                    },
                    dataType: 'JSON'
                }

                ajaxApi(ApiObj).then(result => {
                    // location.reload()
                    showSuccess(result);
                }).catch(error => {
                    showError(error.responseJSON)
                })
            })


            //Select All 
            $("#roomTransactionTable").on('click', '.selectAll-Room-Transaction', function () {
                if (this.checked) {
                    // Iterate each checkbox
                    $('.delete-rootTransaction:checkbox').each(function () {
                        this.checked = true;
                    });
                } else {
                    $('.delete-rootTransaction:checkbox').each(function () {
                        this.checked = false;
                    });
                }
            })


            //Delete Single and mutiple Delete
            $('.select-delete-roomTransaction').on('click', function () {
                let deleteids = []
                $('.delete-rootTransaction:checked').each(function () {
                    let obj = {
                        id: $(this).attr("data-roomtransaction-stage-id"),
                    }
                    deleteids.push(obj)
                })


                console.log('JSON.stringify(deleteids)', JSON.stringify(deleteids))

                if (deleteids.length > 0) {
                    let ApiObj = {
                        url: '/management/rooms/bookings/transaction-types/delete',
                        type: 'POST',
                        data: {
                            inputJSON: JSON.stringify(deleteids)
                        },
                        dataType: 'JSON'
                    }
                    ajaxApi(ApiObj).then(result => {
                        // notify();
                        showSuccess(result);
                    }).catch(error => {
                        showError(error.responseJSON)
                    })

                } else {
                    alert('Select Fields')
                }
            })





            //search feature delay function is writter in script.js file which is located in public/js/script.js
            $('#searchkeyword').on('input', delay(function (e) {
                let keyword = $("#searchkeyword").val()
                $.ajax({
                    type: "POST",
                    url: '/management/rooms/bookings/transaction-types/search',
                    data: {
                        keyword: keyword
                    },
                    success: function (data) {
                        AjaxTable(data.data)
                    }
                })
            }, 500));


            //Pagination Here
            let pageCount = `<%- pageCount %>`
            console.log("Page Count=====>>>", pageCount)
            let pageNos = Math.ceil(Number(pageCount) / 10)

            console.log("Page Numbers", pageNos)
            $('#pagination').bootpag({
                total: pageNos,
                page: 1,
                maxVisible: 10,
                leaps: true,
                firstLastUse: true,
                first: '←',
                last: '→',
                wrapClass: 'pagination',
                activeClass: 'active',
                disabledClass: 'disabled',
                nextClass: 'next',
                prevClass: 'prev',
                lastClass: 'last',
                firstClass: 'first'
            }).on("page", function (event, num) {
                $.ajax({
                    type: "POST",
                    url: "/management/rooms/bookings/transaction-types/pagination",
                    data: {
                        pageNo: num
                    },
                    success: function (data) {
                        AjaxTable(data.data)
                    }
                })
            });


            function showError(errors) {
                console.log('error::::::::::',errors)
                let simpleAlert = new SimpleAlert();
                let obj = {
                    title : errors.description,
                    message: errors.data,
                    type: 'alert-danger',
                    buttons: {
                        positive:{
                            text: "Okay",
                            action: function(){
                                document.querySelector('.simple-alert').remove();
                            }
                        },
                        negative: {
                            text: "Cancel",
                            action: function () {
                            alert('Negative')
                            }
                        }
                    }
                }
                simpleAlert.alert(obj);
        }


        function showSuccess(errors) {
            console.log('error::::::::::',errors)
            let simpleAlert = new SimpleAlert();
            let obj = {
                title : errors.description,
                message: errors.data,
                type: 'alert-success',
                buttons: {
                    positive:{
                        text: "Okay",
                        action: function(){
                            document.querySelector('.simple-alert').remove();
                        }
                    },
                    negative: {
                        text: "Cancel",
                        action: function () {
                        alert('Negative')
                        }
                    }
                }
            }
            simpleAlert.alert(obj);
            
        }

            function AjaxTable(roomTypeStageList) {
                let AjaxTable = `<table class="table custom_row" id="roomTransactionTable">
                    <thead>
                        <th>Sr No.</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Action</th>
                        <th>All <input type="checkbox" class="selectAll-Room-Transaction"></th>
                    </thead>
                    <tbody>`;

                if (roomTypeStageList.length > 0) {
                    let count = 1;
                    for (list of roomTypeStageList) {
                        AjaxTable +=
                            ` <tr>
                            <td>${count++}</td>
                            <td>${list.name}</td>
                            <td>${list.description}</td>
                            <td>
                                <i class="fas fa-edit text-dark cursor-pointer edit-roomtransaction-type"
                                    data-roomtransaction-stages-id="${list.rtsid}"></i>
                            </td>
                            <td>
                            <input type="checkbox" data-roomtransaction-stage-id="${list.rtsid}"
                                class="delete-rootTransaction">
                        </td>
                        </tr>`
                    }
                } else {
                    AjaxTable +=
                        ` <tr>
                                <td colspan="5">No Data Found</td>
                            </tr>`;
                }
                AjaxTable += `<tbody></table>`
                $("#roomTransactionTable").html(AjaxTable);
            }

        })
    </script>
    <%- include("../partials/footerEnd") %>