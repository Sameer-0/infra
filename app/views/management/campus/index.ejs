<%- include("../partials/head") %>

<%- include("../partials/leftSidebar") %>
<%- include("../partials/header") %>
<!--Notificaion icon-->
<!--HEADER END-->

<div class="main-content">
    <!--DASHBOARD CONTENT START-->
    <div class="card table-card">
        <div class="card-header table-card-header text-uppercase d-flex align-items-center justify-content-between">
            <div>
                <h5>Campus</h5>
            </div>
            <div>
                <button class="btn add-btn ms-auto" data-bs-toggle="modal" data-bs-target="#add-campus-modal"><i
                        class="fas fa-plus"></i></button>
                <button class="btn ms-auto delete-campuses add-btn "><i class="fas fa-trash"></i></button>
                <button class="btn ms-auto bulk-delete-campuses add-btn "><i class="fas fa-trash"></i> <i
                        class="fas fa-trash"></i></button>
            </div>
        </div>
        <div class="card-body table-responsive">
            <div class="table-searchbar-container"><button type="button"><i class="fas fa-search"></i> </button><input
                    type="search" id="searchkeyword" placeholder="Enter keywords" class="table-searchbar"></div>

            <table class="table custom_row campusTable" id="campusTable">
                <thead>
                    <th>Campus Id</th>
                    <th>Abbr</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Action</th>
                    <th>All <input type="checkbox" class="selectAll-org"></th>
                </thead>
                <tbody>
                    <% for (let campus of campusList) { %>
                    <tr>
                        <td>
                            <%- campus.campus_id %>
                        </td>
                        <td>
                            <%- campus.abbr %>
                        </td>
                        <td>
                            <%- campus.name %>
                        </td>
                        <td>
                            <%- campus.c_desc %>
                        </td>
                        <td>
                            <i class="fas fa-edit text-dark cursor-pointer edit-campus"
                                data-campus-id="<%- campus.id %>" data-toggle="modal"
                                data-target="#update-campus-modal"></i>
                        </td>
                        <td>
                            <input type="checkbox" data-id="<%- campus.id %>" data-campus-id="<%- campus.campus_id %>"
                                class="delete-campus">
                        </td>
                    </tr>

                    <% } %>
                </tbody>
            </table>
            <div class="d-flex justify-content-between">
                <div>
                    <p>Total entries:<%- pageCount %>
                    </p>
                </div>
                <div>
                    <p id="pagination"></p>

                </div>
            </div>

        </div>
    </div>
    <!--DASHBOARD CONTENT END-->
</div>


<!-- ADD NEW CAMPUS MODAL -->
<div class="modal fade" id="add-campus-modal" tabindex="-1" role="dialog" aria-labelledby="add-campus-modal"
    aria-hidden="true">
    <div class="modal-dialog modal-fullscreen" role="document">
        <div class="modal-content modal-inputform">
            <div class="modal-header bg-info modal-inputform-header">
                <h5 class="modal-title text-white" id="add-org-modal-title">Add New Campus</h5>
                <button type="button" class="btn fs-4 text-white" data-bs-dismiss="modal" aria-label="Close"><i
                        class="fas fa-times"></i></button>

            </div>
            <!-- <form action="/management/campus/add" method="POST"> -->
            <div class="modal-body">
                <div id="errorHtml"></div>

                <div class="table-responsive">
                    <table class="table table-bordered" id="add-more-campus-table">
                        <thead>
                            <th>Campus Id</th>
                            <th>Campus Abbr</th>
                            <th>Campus Name</th>
                            <th>Campus Description</th>
                            <th>Action</th>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <input name="Id" id="Id" type="hidden" class="form-control" placeholder="Campus Id">
                                    <input name="campusId" id="campusId" type="number" class="form-control"
                                        placeholder="Campus Id" required>
                                </td>
                                <td>
                                    <input name="campusAbbr" id="campusAbbr" type="text" class="form-control"
                                        placeholder="Campus Abbr" required>
                                </td>
                                <td>
                                    <input name="campusName" id="campusName" type="text" class="form-control"
                                        placeholder="Campus Name" required>
                                </td>
                                <td>
                                    <input name="campusDesc" id="campusDesc" type="text" class="form-control"
                                        placeholder="Campus Description">
                                </td>
                                <td>
                                    <i class="far fa-edit d-none"></i>
                                    <i class="fas fa-trash-alt text-danger cursor-pointer removecampus"></i>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-success  btn-sm" id="add-more-campus"><i class="fas fa-plus"></i>
                    Add
                    More Campus</button>
                <button type="button" class="btn createCampus modal-inputform-btn">Create
                    Campus</button>
                <button type="button" class="btn updateCampus modal-inputform-btn d-none">Update
                    Campus</button>
            </div>
            <!-- </form> -->

        </div>

        <div class="form-row mt-4">
            <input name="campusDesc" id="campusDesc" type="text" class="form-control" placeholder="Campus Description">

        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn  createCampus modal-inputform-btn">Create Campus</button>
        <button type="button" class="btn  updateCampus modal-inputform-btn d-none">Update
            Campus</button>
    </div>
    <!-- </form> -->

    <div class="form-row mt-4">
        <input name="campusDesc" id="campusDesc" type="text" class="form-control" placeholder="Campus Description">
    </div>
</div>

<%- include("../partials/footer") %>
<script src="https://cdn.rawgit.com/botmonster/jquery-bootpag/master/lib/jquery.bootpag.min.js"></script>
<script>
    $(document).ready(function () {
        $('#add-more-campus').on('click', function () {
            console.log("Organization Added::::")

            let lastTr = $('#add-more-campus-table tbody tr:last-child')
            let campusId = lastTr.find(`select[name='campusId']`).val();
            let campusAbbr = lastTr.find(`select[name='campusAbbr']`).val();
            let campusName = lastTr.find(`select[name='campusName']`).val();
            let campusDesc = lastTr.find(`select[name='campusDesc']`).val();


            let clonedTr = lastTr.clone();
            clonedTr.find(`input[name='campusId']`).val('')
            clonedTr.find(`input[name='campusAbbr']`).val('')
            clonedTr.find(`select[name='campusName']`).val('')
            clonedTr.find(`select[name='campusDesc']`).val('')

            $('#add-more-campus-table tbody').append(clonedTr)
        })

        $('#add-campus-modal').on('click', '.removecampus', function () {
            let trLength = $('#add-campus-modal tbody tr').length;

            if (trLength > 1) {
                $(this).closest('tr').remove()
            } else {
                alert('Cannot delete this room.')
            }
        })


        //management/campus/add
        $('.createCampus').on('click', function () {
            let campusElems = $('#add-more-campus-table tbody tr');
            let campusCount = campusElems.length;

            let campusJson = [];

            campusElems.each(function (index, elem) {
                let campusId = $(elem).find(`input[name='campusId']`).val()
                let campusAbbr = $(elem).find(`input[name='campusAbbr']`).val()
                let campusName = $(elem).find(`input[name='campusName']`).val()
                let campusDesc = $(elem).find(`input[name='campusDesc']`).val()

                if (index < campusCount - 1) {
                    let obj = {
                        campus_id: campusId,
                        campus_abbr: campusAbbr,
                        campus_name_40_char: campusName,
                        campus_description: campusDesc
                    }
                    campusJson.push(obj)
                } else {
                    let obj = {
                        campus_id: campusId,
                        campus_abbr: campusAbbr,
                        campus_name_40_char: campusName,
                        campus_description: campusDesc
                    }
                    campusJson.push(obj)
                }
            })

            console.log('campusJson:::::::>>', campusJson)


            let ApiObj = {
                type: 'POST',
                url: '/management/campuses',
                data: {
                    inputJSON: JSON.stringify(campusJson)
                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                console.log('Result:::::::::::', result)
                location.reload()
            }).catch(error => {

                let errors = JSON.parse(error.responseJSON)
            console.log('Error:::::::::::', errors)
            let errorHtml = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <h3>Error</h3>
                    <p>${errors.description}</p>
                    <ul>`
            errors.data.map(er => {
                console.log('Errr:::::::::::>>', er)
                errorHtml +=
                    `<li>${er.org_id} ${er.org_abbr}</li>`
            })
            errorHtml +=
                `</ul> <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> </div>`
            $("#errorHtml").html(errorHtml)
            })

        })


        $('#campusTable').on('click', '.edit-campus', function () {
            $(".updateCampus").removeClass('d-none')
            $(".createCampus").addClass('d-none')
            $.ajax({
                url: '/management/campus/single',
                method: 'GET',
                type: 'JSON',
                data: {
                    Id: $(this).attr('data-campus-id')
                },
                success: data => {
                    let camp = data.result;
                    $("#Id").val(camp.id)
                    $("#campusId").val(camp.campus_id)
                    $("#campusAbbr").val(camp.campus_abbr)
                    $("#campusName").val(camp.campus_name_40_char)
                    $("#campusDesc").val(camp.campus_description)
                    $("#add-campus-modal").modal('show')
                },

                error: err => {

                }
            })
        })


        $('.updateCampus').on('click', function () {

            let campusElems = $('#add-more-campus-table tbody tr');
            let campusCount = campusElems.length;

            let campusJson = [];

            campusElems.each(function (index, elem) {
                let Id = $(elem).find(`input[name='Id']`).val()
                let campusId = $(elem).find(`input[name='campusId']`).val()
                let campusAbbr = $(elem).find(`input[name='campusAbbr']`).val()
                let campusName = $(elem).find(`input[name='campusName']`).val()
                let campusDesc = $(elem).find(`input[name='campusDesc']`).val()

                if (index < campusCount - 1) {
                    let obj = {
                        id: Id,
                        campus_id: campusId,
                        campus_abbr: campusAbbr,
                        campus_name_40_char: campusName,
                        campus_description: campusDesc
                    }
                    campusJson.push(obj)
                } else {
                    let obj = {
                        id: Id,
                        campus_id: campusId,
                        campus_abbr: campusAbbr,
                        campus_name_40_char: campusName,
                        campus_description: campusDesc
                    }
                    campusJson.push(obj)
                }
            })

            console.log('campusJson:::::::>>', campusJson)



            // $.ajax({
            //     url: '/management/campus',
            //     method: 'PUT',
            //     type: 'JSON',
            //     data: {
            //         Id: $("#Id").val(),
            //         campusId: $("#campusId").val(),
            //         campusAbbr: $("#campusAbbr").val(),
            //         campusName: $("#campusName").val(),
            //         campusDesc: $("#campusDesc").val()

            //         //inputJSON
            //     },
            //     success: data => {
            //         location.reload()
            //     },
            //     error: err => {
            //         console.log(err)
                   
            //     }
            // })
        })


        //Select All Organizations
        $(".selectAll-org").on('click', function () {
            if (this.checked) {
                // Iterate each checkbox
                $('.delete-campus:checkbox').each(function () {
                    this.checked = true;
                });
            } else {
                $('.delete-campus:checkbox').each(function () {
                    this.checked = false;
                });
            }
        })


        //Delete Single and mutiple Delete
        $('.delete-campuses').on('click', function () {
            let deleteids = []
            $('.delete-campus:checked').each(function () {
                let obj = {
                    id: $(this).attr("data-id"),
                    campus_id: $(this).attr("data-campus-id")
                }
                deleteids.push(obj)
            })

            if (deleteids.length > 0) {
                console.log('deleteids::::::::::::::', deleteids)
                let ApiObj = {
                    url: '/management/campuses',
                    type: 'DELETE',
                    data: {
                        Ids: JSON.stringify(deleteids)
                    },
                    dataType: 'JSON'
                }
                ajaxApi(ApiObj).then(result => {
                    location.reload()
                }).catch(error => {
                    let errors = error.responseJSON.message
                    console.log('Error:::::::::::', errors)
                    let errorHtml = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <h3>Error</h3>
                    <ul>`
                    errors.map(er => {
                        errorHtml +=
                            `<li>${er}</li>`
                    })
                    errorHtml +=
                        `</ul> <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> </div>`
                    $("#errorHtml").html(errorHtml)
                })

            } else {
                alert('Select Campus')
            }
        })



        //Bulk Delete
        $(".bulk-delete-campuses").on('click', function () {
            let ApiObj = {
                url: '/management/campuses',
                type: 'PATCH',
                data: {

                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                location.reload()
            }).catch(error => {
                let errors = error.responseJSON.message
                console.log('Error:::::::::::', errors)
                let errorHtml = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <h3>Error</h3>
                    <ul>`
                errors.map(er => {
                    errorHtml +=
                        `<li>${er}</li>`
                })
                errorHtml +=
                    `</ul> <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> </div>`
                $("#errorHtml").html(errorHtml)
            })

        })





        //Pagination Here
        let pageCount = `<%- pageCount %>`
        console.log("Page Count=====>>>", pageCount)
        let pageNos = Math.ceil(Number(pageCount) / 10)
        console.log("Page Numbers", pageNos)
        $('#pagination').bootpag({
            total: pageNos,
            page: 1,
            maxVisible: 10,
            leaps: true,
            firstLastUse: true,
            first: '←',
            last: '→',
            wrapClass: 'pagination',
            activeClass: 'active',
            disabledClass: 'disabled',
            nextClass: 'next',
            prevClass: 'prev',
            lastClass: 'last',
            firstClass: 'first'
        }).on("page", function (event, num) {

            $.ajax({
                type: "POST",
                url: "/management/campus",
                data: {
                    pageNo: num
                },
                success: function (data) {
                    let campusList = data.data;
                    console.log('campusList:::::::>>', campusList)
                    let quoteAjax = `<table class="table custom_row" id="campusTable">
                    <thead>
                        <th>Campus Id</th>
                        <th>Abbr</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Action</th>
                        <th>All <input type="checkbox" class="selectAll-org"></th>
                    </thead>
                    <tbody>`;
                    for (campus of campusList) {
                        quoteAjax +=
                            ` <tr>
                                <td>${campus.campus_id}</td>
                                <td>${campus.abbr}</td>
                                <td>${campus.name}</td>
                                <td>${campus.c_desc}</td>
                                <td>
                                    <i class="fas fa-edit text-dark cursor-pointer edit-campus"
                                        data-campus-id="${campus.id}" data-toggle="modal"
                                        data-target="#update-campus-modal"></i>
                                  
                                </td>
                                <td>
                            <input type="checkbox" data-id="${campus.id}" data-campus-id="${campus.campus_id}"
                                class="delete-campus">
                        </td>
                            </tr>`
                    }
                    quoteAjax += `<tbody></table>`
                    $("#campusTable").html(quoteAjax);
                }
            })
        });


        //search feature delay function is writter in script.js file which is located in public/js/script.js
        $('#searchkeyword').on('input', delay(function (e) {
            let keyword = $("#searchkeyword").val()
            $.ajax({
                type: "GET",
                url: "/management/campus/search",
                data: {
                    keyword: keyword
                },
                success: function (data) {
                    console.log('campusList::::::', data)
                    let campusList = data.data;

                    let AjaxTable = `<table class="table table-bordered campusTable" id="campusTable">
                    <thead>
                        <th>Campus Id</th>
                        <th>Abbr</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Action</th>
                        <th>All <input type="checkbox" class="selectAll-org"></th>
                    </thead>
                    <tbody>`;

                    if (campusList.length > 0) {
                        for (campus of campusList) {
                            AjaxTable +=
                                ` <tr>
                                <td>${campus.campus_id}</td>
                                <td>${campus.abbr}</td>
                                <td>${campus.name}</td>
                                <td>${campus.c_desc}</td>
                                <td>
                                    <i class="fas fa-edit text-dark cursor-pointer edit-campus"
                                        data-campus-id="${campus.id}" data-toggle="modal"
                                        data-target="#update-campus-modal"></i>
                                </td>
                                <td>
                            <input type="checkbox" data-id="${campus.id}" data-campus-id="${campus.campus_id}"
                                class="delete-campus">
                        </td>
                            </tr>`;
                        }
                    } else {
                        AjaxTable +=
                            ` <tr>
                                <td colspan="5">No Data Found</td>
                            </tr>`;
                    }
                    AjaxTable += `<tbody></table>`
                    $("#campusTable").html(AjaxTable);
                }
            })
        }, 500));
    })
</script>
<%- include("../partials/footerEnd") %>