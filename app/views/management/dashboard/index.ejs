<%- include ('../partials/head') %>

<!-- PAGE LEVEL CSSS START -->
<% if (currentFormStep) { %>
<style>
    .stage:nth-child(-n + <%- currentFormStep-1 %>) {
        background: #3cc58c;
        color: #fff;

    }

    .stage:nth-child(-n + <%- currentFormStep-1 %>)::before {
        border-left: 25px solid #3cc58c;
    }

    .stage:nth-child(<%- currentFormStep %>) {
        background: #ffc800;
        color: #000;

    }

    .stage:nth-child(<%- currentFormStep %>)::before {
        border-left: 25px solid #ffc800;
    }
</style>
<% } %>
<!-- PAGE LEVEL CSSS END -->

<%- include ('../partials/leftSidebar') %>
<%- include ('../partials/header') %>

<!-- MAIN-CONTENT -->
<div class="main-content">
    <% if (currentFormStep) { %>
    <%- include('./stepform.ejs') %>
    <% } else { %>
    <%- include('./dashboard.ejs') %>
    <% } %>


</div>
</main>


<%- include('../partials/footer') %>


<!-- PAGE LEVEL JS START -->

<script src="/js/leftsidebartoggle.js"></script>
<script src="/js/dashboardscript.js"></script>

<script>
    $(document).ready(function () {

        let currentFormStep = `<%- currentFormStep %>`;
        $('.step-form .step-form-body .active-form').removeClass('active-form').addClass('d-none');
        $(`.step-form .step-form-body .step[data-step=${currentFormStep}]`).removeClass('d-none').addClass(
            'active-form');

        $(".homeCard .border").hover(function () {
            $this = $(this)

            $this.find("img").css({
                "transition": "0.3s",
                "transform": "scale(0.7)"
            })

            setTimeout(function () {
                $this.find("img").css({
                    "transition": "0.2s",
                    "transform": "scale(1)"
                })
            }, 200)

        }, function () {
            $this.find("img").css({
                "transition": "0.2s",
                "transform": "scale(1)"
            })
        })

        $(".homeCard .border").hover(function () {
            $this = $(this)


            $this.find("img").css({
                "transition": "0.3s",
                "transform": "scale(0.7)"
            })

            setTimeout(function () {
                $this.find("img").css({
                    "transition": "0.2s",
                    "transform": "scale(1)"
                })
            }, 200)

        }, function () {
            $this.find("img").css({
                "transition": "0.2s",
                "transform": "scale(1)"
            })
        })


        // let options = {
        //     dataLabels: {
        //         enabled: true
        //     },
        //     legend: {
        //         show: true
        //     },
        //     chart: {
        //         type: 'donut',
        //         height: 200
        //     },
        //     plotOptions: {
        //         pie: {
        //             donut: {
        //                 size: '40%'
        //             }
        //         }
        //     },
        //     series: [44, 55, 11],
        //     labels: ['Room booked', 'Total room', 'Room available for booking']
        // }
        // var chart = new ApexCharts(document.querySelector("#chart1"), options);
        // chart.render();


        function formStepNext() {
            currentFormStep++;

            $(`.step-form .stages .stage:nth-child(-n + ${currentFormStep-1})`).removeClass('pending').addClass(
                'submitted');
            $(`.step-form .stages .stage:nth-child(${currentFormStep})`).removeClass('pending').addClass(
                'active');


            $('.step-form .step-form-body .active-form').removeClass('active-form').addClass('d-none');
            $(`.step-form .step-form-body .step[data-step=${currentFormStep}]`).removeClass('d-none').addClass(
                'active-form');

        }

        //Calling Apies

        $("#next-step").on('click', function () {
            console.log('Click::::>>')

            if (currentFormStep == 1) {

                let orgElems = $('#add-more-org-table tbody tr');
                let orgCount = orgElems.length;

                let orgJson = [];

                orgElems.each(function (index, elem) {
                    let orgId = $(elem).find(`input[name='orgId']`).val()
                    let orgAbbr = $(elem).find(`input[name='orgAbbr']`).val()
                    let orgName = $(elem).find(`input[name='orgName']`).val()
                    let orgCompleteName = $(elem).find(`input[name='orgCompleteName']`).val()
                    let orgType = $(elem).find(`select[name='orgType']`).val()



                    if (orgId === "" || orgAbbr === "" || orgName === "" || orgCompleteName ===
                        "" || orgType === "") {
                        $('.error-show').text('Fields cannot be empty!!');
                        return;
                    } else if (orgAbbr.trim() === "" || orgName.trim() === "" || orgCompleteName
                        .trim() === "") {
                        $('.error-show').text('Fields cannot have empty space!!');
                        return;
                    } else {

                        if (index < orgCount - 1) {
                            let obj = {
                                org_id: orgId,
                                org_abbr: orgAbbr,
                                org_name: orgName,
                                org_complete_name: orgCompleteName,
                                org_type_id: orgType
                            }
                            orgJson.push(obj)
                        } else {
                            let obj = {
                                org_id: orgId,
                                org_abbr: orgAbbr,
                                org_name: orgName,
                                org_complete_name: orgCompleteName,
                                org_type_id: orgType
                            }
                            orgJson.push(obj)
                        }
                    }
                })

                if (orgJson.length > 0) {

                    $('.error-show').text('');
                    console.log('orgJson:::::::>>', orgJson)

                    let ApiObj = {
                        type: 'POST',
                        url: '/management/organizations',
                        data: {
                            inputJSON: JSON.stringify(orgJson),
                            settingName: 'Organization'
                        },
                        dataType: 'JSON'
                    }

                    ajaxApi(ApiObj).then(result => {
                        console.log('Result:::::::::::>>', result)
                    }).catch(error => {

                        let errors = error.responseJSON.message
                        console.log('Error:::::::::::>>', errors)
                        let errorHtml = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <h3>Error</h3>
                    <ul>`
                        errors.map(er => {
                            errorHtml +=
                                `<li>${er}</li>`
                        })
                        errorHtml +=
                            `</ul> <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> </div>`
                        $("#errorHtml").html(errorHtml)
                    })

                }
            } else if (currentFormStep == 2) {
                let campusElems = $('#add-more-campus-table tbody tr');
                let campusCount = campusElems.length;

                let campusJson = [];

                campusElems.each(function (index, elem) {
                    let campusId = $(elem).find(`input[name='campusId']`).val()
                    let campusAbbr = $(elem).find(`input[name='campusAbbr']`).val()
                    let campusName = $(elem).find(`input[name='campusName']`).val()
                    let campusDesc = $(elem).find(`input[name='campusDesc']`).val()

                    if (campusId === "" || campusAbbr === "" || campusName === "" ||
                        campusDesc === "") {

                        $('.error-show').text('Fields cannot be empty!!');
                        return;

                    } else if (campusAbbr.trim() === "" || campusName.trim() === "" ||
                        campusDesc.trim() === "") {
                        $('.error-show').text('Fields cannot have empty space!!');
                        return;
                    } else {

                        if (index < campusCount - 1) {
                            let obj = {
                                campusId: campusId,
                                campusAbbr: campusAbbr,
                                campusName: campusName,
                                campusDesc: campusDesc
                            }
                            campusJson.push(obj)
                        } else {
                            let obj = {
                                campusId: campusId,
                                campusAbbr: campusAbbr,
                                campusName: campusName,
                                campusDesc: campusDesc
                            }
                            campusJson.push(obj)
                        }
                    }
                })

                if (campusJson.length > 0) {
                    console.log('campusJson:::::::>>', campusJson)
                    $('.error-show').text('')
                    let ApiObj = {
                        type: 'POST',
                        url: '/management/campuses',
                        data: {
                            inputJSON: JSON.stringify(campusJson),
                            settingName: 'Campus'
                        },
                        dataType: 'JSON'
                    }

                    ajaxApi(ApiObj).then(result => {
                        console.log('Result:::::::::::', result)
                    }).catch(error => {

                        let errors = error.responseJSON.message
                        console.log('Error:::::::::::', errors)
                        let errorHtml = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <h3>Error</h3>
                    <ul>`
                        errors.map(er => {
                            errorHtml +=
                                `<li>${er}</li>`
                        })
                        errorHtml +=
                            `</ul> <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> </div>`
                        $("#errorHtml").html(errorHtml)
                    })

                }
            } else if (currentFormStep == 3) {
                console.log('building reached')
                let buildingElems = $('#add-more-building-table tbody tr');
                let buildingCount = buildingElems.length;

                let buildingJson = [];

                buildingElems.each(function (index, elem) {
                    let buildingName = $(elem).find(`input[name='buildingName']`).val()
                    let buildingNumber = $(elem).find(`input[name='buildingNumber']`).val();
                    let floors = $(elem).find(`input[name='floors']`).val();
                    let ownerId = $(elem).find(`select[name='ownerId']`).val();
                    let startTimeId = $(elem).find(`select[name='startTimeId']`).val();
                    let endTimeId = $(elem).find(`select[name='endTimeId']`).val();
                    let handledById = $(elem).find(`select[name='handledById']`).val();
                    let campusId = $(elem).find(`select[name='campusId']`).val();

                    if (buildingName === "" || buildingNumber === "" || floors === "" ||
                        ownerId === "" || startTimeId === "" || endTimeId === "" ||
                        handledById === "" || campusId === "") {
                        $('.error-show').text('Fields cannot be empty!!');
                        return;
                    } else if (buildingName.trim() === "") {
                        $('.error-show').text('Fields cannot have empty space!!');
                        return;
                    } else {

                        if (index < buildingCount - 1) {
                            let obj = {
                                buildingName: buildingName,
                                buildingNumber: buildingNumber,
                                floors: floors,
                                ownerId: ownerId,
                                startTimeId: startTimeId,
                                endTimeId: endTimeId,
                                handledById: handledById,
                                campusId: campusId
                            }
                            buildingJson.push(obj)
                        } else {
                            let obj = {
                                buildingName: buildingName,
                                buildingNumber: buildingNumber,
                                floors: floors,
                                ownerId: ownerId,
                                startTimeId: startTimeId,
                                endTimeId: endTimeId,
                                handledById: handledById,
                                campusId: campusId
                            }
                            buildingJson.push(obj)
                        }
                    }
                })

                if (buildingJson.length > 0) {
                    console.log('buildingJson:::::::>>', buildingJson)
                    $('.error-show').text('');

                    let ApiObj = {
                        type: 'POST',
                        url: '/management/buildings',
                        data: {
                            inputJSON: JSON.stringify(buildingJson),
                            settingName: 'Building'
                        },
                        dataType: 'JSON'
                    }

                    ajaxApi(ApiObj).then(result => {
                        console.log('Result:::::::::::', result)
                    }).catch(error => {

                        let errors = error.responseJSON.message
                        console.log('Error:::::::::::', errors)
                        let errorHtml = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <h3>Error</h3>
                    <ul>`
                        errors.map(er => {
                            errorHtml +=
                                `<li>${er}</li>`
                        })
                        errorHtml +=
                            `</ul> <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> </div>`
                        $("#errorHtml").html(errorHtml)
                    })
                }
            } else if (currentFormStep == 4) {

                let roomElems = $('#add-more-room-table tbody tr');
                let roomCount = roomElems.length;

                let roomJson = [];

                roomElems.each(function (index, elem) {
                    let roomNo = $(elem).find(`input[name='roomNo']`).val()
                    let roomType = $(elem).find(`select[name='roomType']`).val()
                    let floorNo = $(elem).find(`input[name='floorNo']`).val()
                    let capacity = $(elem).find(`input[name='capacity']`).val()
                    let startTime = $(elem).find(`select[name='startTime']`).val()
                    let endTime = $(elem).find(`select[name='endTime']`).val()
                    let isBasement = $(elem).find(`select[name='isBasement']`).val()



                    if (roomNo === "" || roomType === "" || floorNo === "" || capacity ===
                        "" || startTime === "" || endTime === "" || isBasement === "") {
                        $('.error-show').text('Fields cannot be empty!!');
                        return;
                    } else if (roomNo.trim() === "" || floorNo.trim() === "" || capacity
                        .trim() === "") {
                        $('.error-show').text('Fields cannot have empty space!!');
                        return;
                    } else {

                        if (index < roomCount - 1) {
                            let obj = {
                                room_no: roomNo,
                                room_type: roomType,
                                floor_no: floorNo,
                                capacity: capacity,
                                start_time: startTime,
                                end_time: endTime,
                                is_basement: isBasement
                            }
                            roomJson.push(obj)
                        } else {
                            let obj = {
                                room_no: roomNo,
                                room_type: roomType,
                                floor_no: floorNo,
                                capacity: capacity,
                                start_time: startTime,
                                end_time: endTime,
                                is_basement: isBasement
                            }
                            roomJson.push(obj)
                        }
                    }
                })

                if (roomJson.length > 0) {

                    $('.error-show').text('');
                    console.log('roomJson:::::::>>', roomJson)

                    let ApiObj = {
                        type: 'POST',
                        url: '/management/room',
                        data: {
                            inputJSON: JSON.stringify(roomJson),
                            settingName: 'room'
                        },
                        dataType: 'JSON'
                    }

                    ajaxApi(ApiObj).then(result => {
                        console.log('Result:::::::::::>>', result)
                    }).catch(error => {

                        let errors = error.responseJSON.message
                        console.log('Error:::::::::::>>', errors)
                        let errorHtml = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
    <h3>Error</h3>
    <ul>`
                        errors.map(er => {
                            errorHtml +=
                                `<li>${er}</li>`
                        })
                        errorHtml +=
                            `</ul> <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> </div>`
                        $("#errorHtml").html(errorHtml)
                    })

                }
            }
        })
    })
</script>
<!-- PAGE LEVEL JS END -->
<%- include('../partials/footerEnd') %>