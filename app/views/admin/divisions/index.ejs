<%- include("../partials/head") %>
<%- include("../partials/leftSidebar") %>
<%- include("../partials/header") %>
<!--Notificaion icon-->
<!--HEADER END-->

<div class="main-content">
    <!--DASHBOARD CONTENT START-->
    <div class="breadcrumbs-container">

        <ul class="breadcrumb">
            <% if(breadcrumbs){%> <% for (let crumbs of breadcrumbs){%>
            <li><a href="<%- crumbs.url%>"><%- crumbs.name%></a></li>
            <%} }%>
        </ul>
    </div>

    <div class="row my-3 gx-3 gy-3 row1-data">
        <div class="col-xl-2 col-lg-4 col-md-6 ">
            <a href="/admin/divisions/batches">
                <div class="card row1-data-card text-center">
                    <div class="card-body d-flex flex-column align-items-center justify-content-center">
                        <img src="/icon_imgs/batch.PNG" alt="">
                        <p class="fw-normal pt-1">BATCHES</p>
                    </div>
                </div>
            </a>
        </div>
    </div>



    <div class="card table-card">
        <div class="card-header table-card-header text-uppercase d-flex align-items-center justify-content-between">
            <div>
                <h5>DIVISIONS LIST</h5>
            </div>
            <div>
                <a class="btn btn-danger" href="/admin/divisions/download"><i
                    class="fas fa-download"></i> Download </a>
                <!-- <button class="btn btn-danger ms-auto generate-divisions-btn"><i class="fa-solid fa-pen"> </i> Change Division Name/Count</button> -->
                <button class="btn btn-danger ms-auto generate-divisions-btn"><i class="fa-solid fa-rotate"></i>
                    Generate Division</button>
                <!-- <button class="btn add-btn ms-auto" data-bs-toggle="modal" data-bs-target="#open-program-modal"><i
                        class="fas fa-plus"></i></button>
                <button class="btn ms-auto delete-campuses add-btn "><i class="fas fa-trash"></i></button>
                <button class="btn ms-auto bulk-delete-campuses add-btn "><img src="/icons/delete.png" alt=""
                        width="26px" height="32px"></button> -->
            </div>
        </div>

        <div class="card-body table-responsive">
            <div class="row">
                <div class="col-md-3">
                    <select class="form-select select2" id="programName">
                        <option>Select Program</option>
                        <%for(let program of programList){%>
                        <option value="<%-program.id%>" data-program-id="<%-program.program_id%>">
                            <%-program.program_name%></option>
                        <%}%>
                </select>
        </div>

        <div class="col-md-3">
            <select class="form-select select2" id="moduleName">
                <option>Select Module</option>
            <%for(let module of moduleList){%>
                        <option value="<%-module.id%>"><%-module.module_name%></option>
                        <%}%>
            </select>
        </div>

        <div class="col-md-3">

        </div>

        <div class="col-md-3">
            <input type="search" id="searchkeyword" placeholder="Enter keywords" class="form-control">
        </div>
        </div>
            <!-- <div class="table-searchbar-container"><button type="button"><i class="fas fa-search"></i> </button><input
                    type="search" id="searchkeyword" placeholder="Enter keywords" class="table-searchbar"></div> -->
            <!-- <p class="mt-3"><span class="text-danger">Note:</span> In order to keep all Count for theory batch the same,
                simply insert records in the first field and click on the checkbox. 
                If the checkbox is unchecked, the records will be emptied.</p> -->
            <table class="table table-bordered custom_row" id="divisionTable">
                
                <thead>
                    <th>#</th>
                    <th>Program Name</th>
                    <th>Module Name</th>
                    <th>Academic Session</th>
                    <th>Division</th>
                    <th>Student count</th>
                    <th>Count for theory batch <input type="checkbox" id="countForTheoryBatchCheck"></th>
                    <th>Count for practical batch <input type="checkbox" id="countForPracticalBatchCheck"></th>
                    <th>Count for tutorial batch <input type="checkbox" id="countForTutorialBatchCheck"></th>
                    <th>Count for workshop batch <input type="checkbox" id="countForWorkshopBatchCheck"></th>
                    <th>Action</th>
                </thead>
                <tbody>
                    <%let count = 1;%>
                        <% for(let division of divisionList) {%>
                        <tr>
                            <td><%- count++ %><input class="form-control rounded-0" type="hidden" name="division_id"
                                    value="<%-division.id%>"></td>
                            <td data-progarm-name="<%- division.program_name %>">
                                <%- division.program_name %>
                            </td>
                            <td data-module-name="<%- division.module_name %>">
                                <%- division.module_name %>
                            </td>
                            <td data-acad-session="<%- division.acad_session %>"><%- division.acad_session %></td>
                            <td data-division="<%- division.division%>"><%- division.division%></td>
                            <td data-division-count="<%- division.division_count%>"><%- division.division_count%></td>
                            <td><input class="form-control rounded-0" name="count_for_theory_batch"
                                    value="<%-division.count_for_theory_batch%>"></td>
                            <td><input class="form-control rounded-0" name="count_for_practical_batch"
                                    value="<%-division.count_for_practical_batch%>"></td>
                            <td><input class="form-control rounded-0" name="count_for_tutorial_batch"
                                    value="<%-division.count_for_tutorial_batch%>"></td>
                            <td><input class="form-control rounded-0" name="count_for_workshop_batch"
                                    value="<%-division.count_for_workshop_batch%>"></td>
                            <td><a data-id="<%-division.id%>" class="text-danger delete-division"><span
                                        class="fa fa-trash"></span></a></td>
                        </tr>
                        <%}%>
                </tbody>
            </table>
            <div class="d-flex justify-content-between">
                <div>
                    <p>Total entries:<%- pageCount %></p>
                </div>
                <div>
                    <button class="btn btn-danger preview-btn"><span class="fa fa-eye"></span> Preview </button>
                    <button class="btn btn-success SaveAll"><span class="fa fa-check"></span> Update </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="open-priview-modal" tabindex="-1" aria-labelledby="open-priview-modal" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="open-priview-modal-Label">Preview Course workload</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body priview-table">
          
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
          <!-- <button type="button" class="btn btn-primary">Download Excel</button> -->
          <button type="button" class="btn btn-secondary"  onclick="tableToExcel('previewTable', 'Course Workload')" ><span class="fa fa-download"></span> Download Excel</button>
        </div>
      </div>
    </div>
  </div>

<%- include("../partials/footer") %>


<script>
    $(document).ready(function () {
        $('.select2').select2();

        //FILTER APIS
        $("#programName").on('change', function () {
            let programid = $(this).val()
            let program_id = $("#programName option:selected").attr('data-program-id')
            let ApiObj = {
                type: 'POST',
                url: '/admin/divisions/division-by-programid',
                data: {
                    programid: programid,
                    program_id: program_id
                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                let moduleName = ``;
                if (result.moduleList.length > 0) {
                    moduleName +=
                        `<option value="" disabled>Select Module</option>`;
                    result.moduleList.forEach(element => {
                        moduleName +=
                            `<option value="${element.id}" >${element.module_name}</option>`;
                    });
                } else {
                    moduleName +=
                        `<option value="">Module Not Found!</option>`;
                }
                $("#moduleName").html(moduleName)
                AjaxtTable(result.division)
            }).catch(error => {
                showError(error.responseJSON)
            })
        })

        $("#moduleName").on('change', function () {
            let moduleid = $(this).val()
            let programid = $("#programName").val()
            let ApiObj = {
                type: 'POST',
                url: '/admin/divisions/division-by-moduleid',
                data: {
                    moduleid: moduleid,
                    programid: programid
                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                AjaxtTable(result.result)
            }).catch(error => {
                showError(error.responseJSON)
            })
        })

        //SaveAll
        $(".SaveAll").on('click', function () {
            console.log('SaveAll::::::::::>>>')
            let divElems = $('#divisionTable tbody tr');
            let divCount = divElems.length;
            let divJSON = [];
            divElems.each(function (index, elem) {
                let id = $(elem).find(`input[name='division_id']`).val()
                let count_for_theory_batch = $(elem).find(
                    `input[name='count_for_theory_batch']`).val()
                let count_for_practical_batch = $(elem).find(
                    `input[name='count_for_practical_batch']`).val();
                let count_for_tutorial_batch = $(elem).find(
                    `input[name='count_for_tutorial_batch']`).val();
                let count_for_workshop_batch = $(elem).find(
                    `input[name='count_for_workshop_batch']`).val();


                if (index < divCount - 1) {
                    let obj = {
                        id: id,
                        count_for_theory_batch: count_for_theory_batch,
                        count_for_practical_batch: count_for_practical_batch,
                        count_for_tutorial_batch: count_for_tutorial_batch,
                        count_for_workshop_batch: count_for_workshop_batch
                    }
                    divJSON.push(obj)
                } else {
                    let obj = {
                        id: id,
                        count_for_theory_batch: count_for_theory_batch,
                        count_for_practical_batch: count_for_practical_batch,
                        count_for_tutorial_batch: count_for_tutorial_batch,
                        count_for_workshop_batch: count_for_workshop_batch
                    }
                    divJSON.push(obj)
                }
            })

            console.log('Json::::::::::::', divJSON)
            let ApiObj = {
                type: 'POST',
                url: '/admin/divisions/update',
                data: {
                    inputJSON: JSON.stringify(divJSON)
                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                console.log(result)
                showSuccess(result)

            }).catch(error => {
                showError(error.responseJSON)
            })
        })


            //previewModal
            $(".preview-btn").on('click', function(){
            let divElems = $('#divisionTable tbody tr');
            let divisionJSON = [];
            divElems.each(function (index, elem) {
                let program_name = $(elem).find(`td[data-progarm-name]`).attr(
                    `data-progarm-name`);
                let module_name = $(elem).find(`td[data-module-name]`).attr(
                    `data-module-name`);
                let acad_session = $(elem).find(`td[data-acad-session]`).attr(
                    `data-acad-session`);
                let division = $(elem).find(`td[data-division]`).attr(
                    `data-division`);
                    let division_count = $(elem).find(`td[data-division-count]`).attr(
                    `data-division-count`);
                let count_for_theory_batch = $(elem).find(
                    `input[name='count_for_theory_batch']`).val()
                let count_for_practical_batch = $(elem).find(
                    `input[name='count_for_practical_batch']`).val();
                let count_for_tutorial_batch = $(elem).find(
                    `input[name='count_for_tutorial_batch']`).val();
                let count_for_workshop_batch = $(elem).find(
                    `input[name='count_for_workshop_batch']`).val();
                    let obj = {
                        program_name:program_name,
                        module_name: module_name,
                        acad_session: acad_session,
                        division: division,
                        division_count: division_count,
                        count_for_theory_batch: count_for_theory_batch,
                        count_for_practical_batch: count_for_practical_batch,
                        count_for_tutorial_batch: count_for_tutorial_batch,
                        count_for_workshop_batch: count_for_workshop_batch
                    }
                    divisionJSON.push(obj)
                
            })
            let previewTable = `<table class="table custom_row table-bordered" id="previewTable" summary="Code page support in different versions of MS Windows." rules="groups" >
                <thead>
                    <th>#</th>
                    <th>Program Name</th>
                    <th>Module Name</th>
                    <th>Academic Session</th>
                    <th>Division</th>
                    <th>Student count</th>
                    <th>Count for theory batch</th>
                    <th>Count for practical batch</th>
                    <th>Count for tutorial batch</th>
                    <th>Count for workshop batch</th>
                </thead>`;
                let count = 1;
                divisionJSON.forEach(function(division){
                    previewTable +=`<tr>
                            <td>${count++}</td>
                            <td>
                                ${division.program_name}
                            </td>
                            <td>
                                ${division.module_name}
                            </td>
                            <td>${division.acad_session}</td>
                            <td>${division.division}</td>
                            <td>${division.division_count}</td>
                            <td>${division.count_for_theory_batch}</td>
                            <td>${division.count_for_practical_batch}</td>
                            <td>${division.count_for_tutorial_batch}</td>
                            <td>${division.count_for_workshop_batch}</td>
                        </tr>` 
                })
        $(".priview-table").html(previewTable)
         $("#open-priview-modal").modal('show')
        })


        //Create 
        $('#divisionTable').on('change', '.changeStatus', function () {
            //console.log($(this).attr('data-id'))
            //console.log($(this).attr('data-status'))
            if ($(this).is(':checked')) {
                //console.log('Yes')
                chnageStatus($(this).attr('data-id'), 1)
            } else {
                //console.log('No')
                chnageStatus($(this).attr('data-id'), 0)
            }
        })

        function chnageStatus(id, status) {
            console.log(id, status)
            let ApiObj = {
                url: '/admin/divisions/change',
                type: 'POST',
                data: {
                    id: id,
                    status: status
                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {

                loadAll()
            }).catch(error => {

            })
        }


        function loadAll() {
            let ApiObj = {
                url: '/admin/divisions/getAll',
                type: 'POST',
                data: {},
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                console.log('Result::::::::::::::::::::', result.result)
                AjaxTable(result.result)
            }).catch(error => {

            })
        }



        //REFRESH
        $(".generate-divisions-btn").on('click', function () {
            let apiObj = {
                type: "POST",
                url: "/admin/divisions/generate-division",
                data: {},
                dataType: "JSON"
            }
            ajaxApi(apiObj).then(result => {
                showSuccess(result)
            }).catch(error => {

                showError(error.responseJSON)
            })
        })


        // SEARCH PROGRAM TYPE
        $('#searchkeyword').on('input', delay(function (e) {
            let keyword = $("#searchkeyword").val()
            $.ajax({
                type: "POST",
                url: "/admin/divisions/search",
                data: {
                    keyword: keyword
                },
                success: function (data) {
                    console.log(data)
                    AjaxtTable(data.data)
                }
            })
        }, 500));



        //DELETE DIVISION BATCH
        $("#divisionTable").on('click', '.delete-division', function () {
            let id = $(this).attr("data-id")
            let ApiObj = {
                type: 'POST',
                url: '/admin/divisions/delete',
                data: {
                    id: id
                },
                dataType: 'JSON'
            }
            ajaxApi(ApiObj).then(result => {
                console.log('sucess:::::::::', result)
                showSuccess(result)
            }).catch(error => {
                showError(error.responseJSON)
            })
        })


        // countForTheoryBatchCheck
        $("#divisionTable").on('change', '#countForTheoryBatchCheck', function () {
            if ($(this).is(":checked")) {
                let tableRow = $('#divisionTable tbody tr');
                tableRow.each(function (index, elem) {
                    if (index == 0 && $(
                            `#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_theory_batch']`
                            ).val() == '') {
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_theory_batch']`)
                            .css('border', '1px solid red')
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_theory_batch']`)
                            .attr('placeholder', 'This Field is Mandetory')
                    }
                    let intake = $(elem).find(`input[name='count_for_theory_batch']`).val()
                    $(`#divisionTable tbody tr td input[name='count_for_theory_batch']`).val(
                        intake).trigger('change')
                })
                console.log('True')
            } else {
                let tableRow = $('#divisionTable tbody tr');
                tableRow.each(function (index, elem) {
                    if (index == 0) {
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_theory_batch']`)
                            .attr('placeholder', 'This Field is Mandetory')
                    }
                    let intake = $(elem).find(`input[name='count_for_theory_batch']`).val()
                    $(`#divisionTable tbody tr td input[name='count_for_theory_batch']`).val('')
                        .trigger('change')
                })
                console.log('False')
            }
        })


            // countForPracticalBatchCheck
            $("#divisionTable").on('change', '#countForPracticalBatchCheck', function () {
            if ($(this).is(":checked")) {
                let tableRow = $('#divisionTable tbody tr');
                tableRow.each(function (index, elem) {
                    if (index == 0 && $(
                            `#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_practical_batch']`
                            ).val() == '') {
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_practical_batch']`)
                            .css('border', '1px solid red')
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_practical_batch']`)
                            .attr('placeholder', 'This Field is Mandetory')
                    }
                    let intake = $(elem).find(`input[name='count_for_practical_batch']`).val()
                    $(`#divisionTable tbody tr td input[name='count_for_practical_batch']`).val(
                        intake).trigger('change')
                })
                console.log('True')
            } else {
                let tableRow = $('#divisionTable tbody tr');
                tableRow.each(function (index, elem) {
                    if (index == 0) {
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_practical_batch']`)
                            .attr('placeholder', 'This Field is Mandetory')
                    }
                    let intake = $(elem).find(`input[name='count_for_practical_batch']`).val()
                    $(`#divisionTable tbody tr td input[name='count_for_practical_batch']`).val('')
                        .trigger('change')
                })
                console.log('False')
            }
        })


            // countForTutorialBatchCheck
            $("#divisionTable").on('change', '#countForTutorialBatchCheck', function () {
            if ($(this).is(":checked")) {
                let tableRow = $('#divisionTable tbody tr');
                tableRow.each(function (index, elem) {
                    if (index == 0 && $(
                            `#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_tutorial_batch']`
                            ).val() == '') {
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_tutorial_batch']`)
                            .css('border', '1px solid red')
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_tutorial_batch']`)
                            .attr('placeholder', 'This Field is Mandetory')
                    }
                    let intake = $(elem).find(`input[name='count_for_tutorial_batch']`).val()
                    $(`#divisionTable tbody tr td input[name='count_for_tutorial_batch']`).val(
                        intake).trigger('change')
                })
                console.log('True')
            } else {
                let tableRow = $('#divisionTable tbody tr');
                tableRow.each(function (index, elem) {
                    if (index == 0) {
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_tutorial_batch']`)
                            .attr('placeholder', 'This Field is Mandetory')
                    }
                    let intake = $(elem).find(`input[name='count_for_tutorial_batch']`).val()
                    $(`#divisionTable tbody tr td input[name='count_for_tutorial_batch']`).val('')
                        .trigger('change')
                })
                console.log('False')
            }
        })

                    // countForTutorialBatchCheck
                    $("#divisionTable").on('change', '#countForWorkshopBatchCheck', function () {
            if ($(this).is(":checked")) {
                let tableRow = $('#divisionTable tbody tr');
                tableRow.each(function (index, elem) {
                    if (index == 0 && $(
                            `#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_workshop_batch']`
                            ).val() == '') {
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_workshop_batch']`)
                            .css('border', '1px solid red')
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_workshop_batch']`)
                            .attr('placeholder', 'This Field is Mandetory')
                    }
                    let intake = $(elem).find(`input[name='count_for_workshop_batch']`).val()
                    $(`#divisionTable tbody tr td input[name='count_for_workshop_batch']`).val(
                        intake).trigger('change')
                })
                console.log('True')
            } else {
                let tableRow = $('#divisionTable tbody tr');
                tableRow.each(function (index, elem) {
                    if (index == 0) {
                        $(`#divisionTable tbody tr:nth-child(${index+1}) td input[name='count_for_workshop_batch']`)
                            .attr('placeholder', 'This Field is Mandetory')
                    }
                    let intake = $(elem).find(`input[name='count_for_workshop_batch']`).val()
                    $(`#divisionTable tbody tr td input[name='count_for_workshop_batch']`).val('')
                        .trigger('change')
                })
                console.log('False')
            }
        })


        function AjaxtTable(divisionList) {
            let AjaxTable = `<table class="table table-bordered custom_row" id="divisionTable">
                <thead>
                    <th>#</th>
                    <th>Program Name</th>
                    <th>Module Name</th>
                    <th>Academic Session</th>
                    <th>Division</th>
                    <th>Student count</th>
                    <th>Count for theory batch <input type="checkbox" id="countForTheoryBatchCheck"></th>
                    <th>Count for practical batch <input type="checkbox" id="countForPracticalBatchCheck"></th>
                    <th>Count for tutorial batch <input type="checkbox" id="countForTutorialBatchCheck"></th>
                    <th>Count for workshop batch <input type="checkbox" id="countForWorkshopBatchCheck"></th>
                    <th>Action</th>
                </thead>`;
            if (divisionList.length > 0) {
                let count = 1;
                for (let division of divisionList) {
                    AjaxTable +=
                        `<tr>
                        <td>
                            ${count++}<input class="form-control rounded-0" type="hidden" name="division_id" value="${division.id}"></td>
                            <td>${division.program_name}</td>
                            <td>
                            ${division.module_name}
                           </td>
                        <td>${division.acad_session}</td>
                        <td>${division.division}</td>
                        <td>${division.division_count}</td>
                        <td><input class="form-control rounded-0" name="count_for_theory_batch" value="${division.count_for_theory_batch}"></td>
                        <td><input class="form-control rounded-0" name="count_for_practical_batch" value="${division.count_for_practical_batch}"></td>
                        <td><input class="form-control rounded-0" name="count_for_tutorial_batch" value="${division.count_for_tutorial_batch}"></td>
                        <td><input class="form-control rounded-0" name="count_for_workshop_batch" value="${division.count_for_workshop_batch}"></td>
                        <td><a data-id="${division.id}" class="text-danger delete-division"><span class="fa fa-trash"></span></a></td>
                    </tr>`
                }
            } else {
                AjaxTable +=
                    ` <tr>
                                <td colspan="9">No Data Found</td>
                            </tr>`;
            }
            AjaxTable += `<tbody></table>`
            $("#divisionTable").html(AjaxTable);
        }

        function showError(errors) {
            console.log('error::::::::::', errors)
            let simpleAlert = new SimpleAlert();
            let obj = {
                title: errors.description,
                message: errors.data,
                type: 'alert-danger',
                buttons: {
                    positive: {
                        text: "Okay",
                        action: function () {
                            document.querySelector('.simple-alert').remove();
                        }
                    },
                    negative: {
                        text: "Cancel",
                        action: function () {
                            alert('Negative')
                        }
                    }
                }
            }
            simpleAlert.alert(obj);
        }


        function showSuccess(errors) {
            console.log('error::::::::::', errors)
            let simpleAlert = new SimpleAlert();
            let obj = {
                title: errors.description,
                message: errors.data,
                type: 'alert-success',
                buttons: {
                    positive: {
                        text: "Okay",
                        action: function () {
                            document.querySelector('.simple-alert').remove();
                        }
                    },
                    negative: {
                        text: "Cancel",
                        action: function () {
                            alert('Negative')
                        }
                    }
                }
            }
            simpleAlert.alert(obj);
        }


    })
</script>

<!-- Download Excel Workbook client side -->
<script type="text/javascript">
    var tableToExcel = (function() {
      var uri = 'data:application/vnd.ms-excel;base64,'
        , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>'
        , base64 = function(s) { return window.btoa(unescape(encodeURIComponent(s))) }
        , format = function(s, c) { return s.replace(/{(\w+)}/g, function(m, p) { return c[p]; }) }
      return function(table, name) {
        if (!table.nodeType) table = document.getElementById(table)
        var ctx = {worksheet: name || 'Worksheet', table: table.innerHTML}
        window.location.href = uri + base64(format(template, ctx))
      }
    })()
    </script>
<%- include("../partials/footerEnd") %>