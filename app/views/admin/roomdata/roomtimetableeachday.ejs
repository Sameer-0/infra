<%- include("../partials/head") %>
<%- include("../partials/leftSidebar") %>
<%- include("../partials/header") %>
<%- include("../partials/loader") %>


<div class="col-12 dashboardContent">
  <!--DASHBOARD CONTENT START-->
  <div class="card mt-5">
    <div class="card-header">
      <h1 class="f-20">Room Allocation Chart</h1>
    </div>
    <div class="card-body">
      <div id="filter-bar">
        <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
          <% for (let day of days) { %>
          <li class="nav-item table-tab">
            <a class="nav-link text-capitalize <%- day.id == 1 ? 'active' : '' %>"
              id="tab-<%- day.name.toLowerCase() %>" data-dayid="<%- day.id %>" data-toggle="pill" href="#"
              aria-controls="pills-<%- day.name.toLowerCase() %>" valueAttr="<%- day.name.toLowerCase() %>"
              aria-selected="true"><%- day.name.toLowerCase() %></a>
          </li>
          <% } %>
        </ul>
        <div class="d-flex">
          <div class="col-md-3 col-sm-12 pl-0" id="filter-input-group">
            <select id="select-room-filter" class="form-control" multiple>
              <% for (let room of roomList) { %>
              <option value="<%- room.roomno %>"><%- room.roomno %></option>
              <% } %>
            </select>
          </div>
          <div class="col-md-3 col-sm-12">
            <input type="search" id="search-filter" class="form-control" placeholder="Search" />
          </div>
        </div>
      </div>
      <hr />

      <div class="row">
        <% if (isFreezed === 'Y') { %>
        <div class="col-12">
          <h5 class="alert-danger p-3">Time Table has been freezed. No changes can be made from here.</h5>
        </div>
        <% } %>
        <div class="col-12 fullscreen mb-3">
          <a href="/roomdata/simulatedFacultyWorkStatus" target="_blank" class="btn btn-sm btn-outline-dark"><i
              class="fas fa-eye"> Faculty Status</i></a>

          <!-- <button class="btn btn-sm btn-outline-dark btn-fullscreen" data-toggle="modal"
            data-target="#full-screen-modal"><i class="fas fa-compress"></i></button> -->
          <a href="/roomdata/downloadroomtimesheet"><button class="btn btn-sm btn-outline-dark" type="button"><i
                class="fas fa-download"></i></button></a>
          <% if (isFreezed !== 'Y') { %>
          <button class="btn btn-sm btn-danger" id="generateTimesheet" disabled <%- outResult.output %>>Freeze
            Timesheet</button>
          <% } %>
        </div>
      </div>

      <div class="table-responsive">
        <table id="allotedTimeSlotData" class="table table-bordered table-striped time-table-daywise">
          <thead>
            <tr>
              <th scope="col">Room No</th>
              <% for (slot of slotList) { %>
              <th><%- slot.starttime %> to <%- slot.endtime %></th>
              <% } %>
            </tr>
          </thead>
          <tbody>

            <% 
              let roomNo = values[0].roomno;
            %>
            <tr data-room="<%- roomNo.toLowerCase() %>">
              <td class="room-no"><%- roomNo %></td>
              <!-- Changed By Hiren -->
              <% for(let slot of values) {
                  if(slot.roomno == roomNo) { %>
              <td class="draggableTd" id="td<%- slot.id %>" data-id="<%- slot.id %>"
                data-eventName="<%- slot.eventName %>"
                data-eventwithtime="<%- slot.eventName != 0 ? slot.eventName : 'Not Alloted' %> |<%- slot.slotTime %>"
                data-facultyId="<%- slot.facultyId %>" data-slot="<%- slot.slotName %>"
                data-program="<%- slot.bookedProgramId %>" data-acadSession="<%- slot.bookedAcadSession %>"
                data-eventType="<%- slot.eventType %>" data-eventId="<%- slot.eventId %>"
                data-bookedDiv="<%- slot.bookedDiv %>" data-uuid="<%- slot.uuid %>"
                draggable="<%- slot.eventName != 0 ? 'true' : 'false' %>">
                <%- slot.eventName != 0 ? slot.eventName : 'Not Alloted' %>
                |<%- slot.slotTime %><% if(slot.facultyType == 1) { %><span
                  class="facultyTypeV">V</span><% } else if(slot.facultyType == 0) { %><span
                  class="facultyTypeC">C</span> <% } %></td>
              <% } else { %>
            </tr>
            <tr data-room="<%- slot.roomno.toLowerCase() %>">
              <td class="room-no"><%- slot.roomno %></td>
              <td class="draggableTd" id="td<%- slot.id %>" data-id="<%- slot.id %>"
                data-eventName="<%- slot.eventName %>"
                data-eventwithtime="<%- slot.eventName != 0 ? slot.eventName : 'Not Alloted' %> |<%- slot.slotTime %>"
                data-facultyId="<%- slot.facultyId %>" data-slot="<%- slot.slotName %>"
                data-program="<%- slot.bookedProgramId %>" data-acadSession="<%- slot.bookedAcadSession %>"
                data-eventType="<%- slot.eventType %>" data-eventId="<%- slot.eventId %>"
                data-bookedDiv="<%- slot.bookedDiv %>" data-uuid="<%- slot.uuid %>"
                draggable="<%- slot.eventName != 0 ? 'true' : 'false' %>">
                <%- slot.eventName != 0 ? slot.eventName : 'Not Alloted' %> |<%- slot.slotTime %>
                <% if(slot.facultyType == 1) { %><span class="facultyTypeV">V</span>
                <% } else if(slot.facultyType == 0) { %><span class="facultyTypeC">C</span> <% } %></td>
              <% }
                  roomNo = slot.roomno;
              } %>
            </tr>

            <tr>
              <td class="noResult text-center d-none" colspan="10">
                <i class="fas fa-exclamation-circle text-danger fa-4x"></i>
                <h5>No Data Found</h5>
              </td>
            </tr>
          </tbody>
        </table>
      </div>

      <%- include("../partials/manualAllocationDrawer") %>
    </div>
  </div>

  <!-- Modal -->
  <% if(isFreezed !== 'Y') { %>
  <div class="modal fade" id="editAllotedTimeSlotData" tabindex="-1" role="dialog"
    aria-labelledby="editSimulatedModalDataTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header bg-info">
          <h5 class="modal-title text-white" id="editSimulatedModalDataTitle">Update Data</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-12 mb-3">
              <p class="thisTdSlot"></p>
            </div>
            <div id="assignedFaculties" class="col-12">
              <!-- assigned faculties list -->
            </div>

            <div class="col-12 text-center">
              <hr />
              <select class="slotPicker form-control mb-3 modalSelect2" id="slotForAllotmentPicker" name="slotPicker">
              </select>
              <select class="slotPicker form-control mb-3" id="FacultyForModule" name="FacultyForModule">
                <option value selected disabled>--Select Faculty--</option>
              </select>

              <div class="input-group mb-3 slotPickerGroup">
                <select class="form-control" id="changeFacultySlot" name="changeFacultySlot">
                  <option value selected disabled>--Select Faculty--</option>
                </select>
                <div class="input-group-append">
                  <button type="button" class="btn btn-primary" id="saveChangedFaculty">Save</button>
                </div>
              </div>

              <button id="allocateSlotInitial" class="btn btn-sm btn-success">Schedule</button>
              <button id="changeFaculty" class="btn btn-sm btn-success">Change Faculty</button>
              <button id="initialDropSlot" class="btn btn-sm btn-danger">Drop Slot</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- MANUAL DROP SLOT Modal -->
  <div class="modal fade" id="manualDropSlotModal" tabindex="-1" role="dialog" aria-labelledby="manualDropSlotModal"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header bg-info">
          <h5 class="modal-title text-white" id="manualDropSlotModalTitle">Drop Current Slot</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-12 mb-3">
              <p class="thisTdSlot"></p>
            </div>
            <div class="col-12 text-center">
              <button id="manualDropSlotBtn" class="btn btn-sm btn-danger">Drop Slot</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Manual Allocation Modal -->
  <div class="modal fade" id="manualAllocationModal" role="dialog" aria-labelledby="manualAllocationModal"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header bg-info">
          <h5 class="modal-title text-white" id="manualAllocationModalTitle">Manual Allocation</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-12 mb-3">
              <p class="allocationFor"><span class="font-weight-bold">Room No: </span> <span class="room"></span></p>
              <p class="allocationFor mb-0"><span class="font-weight-bold">Slot No: </span> <span class="slot"></span>
              </p>
              <hr />
            </div>
            <div class="col-12 text-center">
              <label>Program ID</label>
              <select class="form-control mb-3 select2Modal" id="manualProgram">
              </select>
            </div>
            <div class="col-12 text-center">
              <select class="form-control mb-3 select2Modal" id="manualAcadSession">
              </select>
            </div>
            <div class="col-12 text-center">
              <select class="form-control mb-3 select2Modal" id="manualDiv" disabled>
                <option disabled selected value>--Select Division--</option>
              </select>
            </div>
            <div class="col-12 text-center">
              <select class="form-control mb-3 select2Modal" id="manualModuleName" disabled>
                <option disabled selected value>--Select Module Name--</option>
              </select>
            </div>
            <div class="col-12 text-center">
              <select class="form-control mb-3 select2Modal" id="manualFaculty" disabled>
                <option disabled selected value>--Select Faculty--</option>
              </select>
            </div>

            <div class="col-12 text-center">
              <button id="manualAllocate" class="btn btn-sm btn-success">Allocate</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="manualAllocationDropSlot" role="dialog" aria-labelledby="manualAllocationDropSlot"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header bg-info">
          <h5 class="modal-title text-white" id="manualAllocationDropSlotTitle">Manual Allocation</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-12 mb-3">
              <p class="allocationFor"><span class="font-weight-bold">Room No: </span> <span class="room"></span></p>
              <p class="allocationFor mb-0"><span class="font-weight-bold">Slot No: </span> <span class="slot"></span>
              </p>
              <hr />
            </div>
            <div class="col-12 text-center">
              <label>Program ID</label>
              <select class="form-control mb-3 select2Modal" id="manualProgram">
              </select>
            </div>
            <div class="col-12 text-center">
              <select class="form-control mb-3 select2Modal" id="manualAcadSession">
              </select>
            </div>
            <div class="col-12 text-center">
              <select class="form-control mb-3 select2Modal" id="manualDiv" disabled>
                <option disabled selected value>--Select Division--</option>
              </select>
            </div>
            <div class="col-12 text-center">
              <select class="form-control mb-3 select2Modal" id="manualModuleName" disabled>
                <option disabled selected value>--Select Module Name--</option>
              </select>
            </div>
            <div class="col-12 text-center">
              <select class="form-control mb-3 select2Modal" id="manualFaculty" disabled>
                <option disabled selected value>--Select Faculty--</option>
              </select>
            </div>

            <div class="col-12 text-center">
              <button id="manualAllocate" class="btn btn-sm btn-success">Allocate</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <% } %>


  <!-- RIGHT SIDEBAR DROPPED SLOTS -->
  <div id="toggleDroppedSlots" class="bg-danger d-flex align-items-center">
    <i class="fas fa-angle-double-left fa-2x"></i>
    <span class="ml-3">Manually Dropped Slots</span>
  </div>
  <div class="droppedSlots">
    <div class="droppedSlotHead p-2 d-flex">
      <span class="closeDroppedSlots"><i class="far fa-times-circle fa-2x"></i></span>
      <h6 class="ml-auto">DROPPED SLOTS</h6>
    </div>
    <div class="droppedSlotsBody">
      <ul class="list-unstyled p-0">

      </ul>
    </div>
  </div>

</div>
<%- include("../partials/fullscreen-timetable") %>
<!--DASHBOARD CONTENT END-->



<%- include("../partials/footer") %>
<script>
  //SOCKET IO
  
 
  let socket = io.connect(`http://<%- slug %>.localhost:3000/`, {
    secure: true
  });
  socket.on('connect', () => {
    console.log(socket.connected)
  });
  socket.emit('join', 'Hello World from client')

  $(document).ready(function () {
    let manualProgram = $("#manualProgram")
    let manualAcadSessionSel = $('#manualAcadSession')
    let manualDivSel = $('#manualDiv')
    let manualModuleNameSel = $('#manualModuleName')
    let manualFacultySel = $('#manualFaculty')
    let thisVal = null
    let lastSelTd = null;
    let droppedId = null
    let roomNumber = null
    let thisSlotG = null;
    let tdSlot = null;
    let tdTableId = null;

    initDraggable();


    //SEARCH FUNCTION

    $('#select-room-filter').select2({
      placeholder: "Select rooms to filter.",
      allowClear: true
    });

    let roomFilterLen = $('#select-room-filter').val().length
    //Room filter start
    $('#select-room-filter').change(function () {

      $('.select2-search__field').keydown(function (e) {
        if (e.which == 8) {
          e.preventDefault();
        }
      })

      let $thisLen = $(this).val().length;

      if ($thisLen > roomFilterLen) {
        let filterArr = $(this).val();
        console.log("Item added: ", filterArr);
        let isFiltered = $(`#allotedTimeSlotData tbody tr[class='d-none']`).length
        if (isFiltered == 0) {
          $('#allotedTimeSlotData tbody tr[data-room]').addClass('d-none')
        }
        for (let room of filterArr) {
          $(`#allotedTimeSlotData tbody tr[data-room= '${room.toLowerCase()}']`).removeClass('d-none')
        }
        roomFilterLen = $thisLen;
      }

      if ($thisLen < roomFilterLen) {
        console.log("Item removed");
        roomFilterLen = $thisLen;

        if (roomFilterLen == 0) {
          $('#allotedTimeSlotData tbody tr[data-room]').removeClass('d-none')
        }

        $(document).on('click', '.select2-selection__choice__remove', function () {
          let removedRoom = $(this).parent().attr('title').toLowerCase();
          console.log("removedRoom===>> ", removedRoom)
          $(`#allotedTimeSlotData tbody tr[data-room= '${removedRoom}']`).addClass('d-none')
        })

      }

    })
    //Room filter end

    //Search Filter start

    $('#search-filter').on('input', function () {

      let searchStr = $(this).val().toLowerCase()

      if (searchStr.length > 1) {
        $('tr[data-room]').addClass('d-none')
        $('tr[data-room]').each(function (iTr, thisTr) {
          $(thisTr).find('td:not(:first-child)').each(function (iTd, thisTd) {
            if ($(thisTd).html().toLowerCase().includes(searchStr)) {
              $(thisTd).addClass('bg-info').parent().removeClass('d-none')
            } else {
              $(thisTd).removeClass('bg-info')
            }
          })

        })
      } else {
        $('tr[data-room]').removeClass('d-none')
        $('tr[data-room] td').removeClass('bg-info')
      }
    })
    //Search Filter end


    function addSlotAttr() {
      $("#allotedTimeSlotData tbody tr").each(function () {
        let $this = $(this)
        let dayNameSlot = $('.table-tab').find('.active').attr('valueattr')
        let tdLength = $this.find("td:not(:first-child)").length
        let tdcount;
        for (tdCount = 1; tdCount <= tdLength; tdCount++) {
          $this.find("td:nth-child(" + (tdCount + 1) + ")").attr("name", "slot" + tdCount + dayNameSlot)
        }
      })
    }
    addSlotAttr();


    //ajax call for roomAllotmentDayWise here users will query for the specific day
    $('.table-tab').click(function (e) {

      console.log($(this).find('.nav-link').attr('valueAttr'));
      e.preventDefault();

      $.ajax({
        type: "POST",
        url: "/roomdata/getroomtimesheet/",
        data: {
          dayasked: $(this).find('.nav-link').attr('valueAttr'),
          dayId: $(this).find('.nav-link').attr('data-dayid')
        },
        success: function (result) {
          if (result.cause == "permission denied") {
							window.location = result.reqUrl
							return
				  }
          let timeTable = result.data;
          let slotTiming = result.slotTiming;

          console.log("Slot timing: ", slotTiming)

          let roomNo = timeTable[0].roomno;
          let trString = `<tr data-room="${roomNo.toLowerCase()}"><td class="room-no">${roomNo}</td>`;
          let thString = `<tr><th scope="col">Room No</th>`;

          for (let slot of slotTiming) {
            thString += `<th>${slot.starttime} to ${slot.endtime}</th>`
          }
          thString += `</tr>`;

          for (let slot of timeTable) {
            //Changed By Hiren
            if (slot.roomno == roomNo) {
              trString +=
                `<td class="draggableTd" id="td${slot.id}" data-id="${slot.id}" data-eventName="${slot.eventName}" data-eventwithtime="${slot.eventName != 0 ? slot.eventName : 'Not Alloted'} |${slot.slotTime}" data-facultyId="${slot.facultyId}"
                data-slot="${slot.slotName}" data-program="${slot.bookedProgramId}" data-acadSession="${slot.bookedAcadSession}" data-eventType="${slot.eventType}" data-eventId="${slot.eventId}" data-bookedDiv="${slot.bookedDiv}" data-uuid="${slot.uuid}" draggable="${slot.eventName != 0 ? 'true' : 'false'}">${slot.eventName != 0 ? slot.eventName : 'Not Alloted'} |${slot.slotTime} ${slot.facultyType == 1 ? '<span class="facultyTypeV">V</span>' : ''} ${slot.facultyType == 0 ? '<span class="facultyTypeC">C</span>' : ''}</td>`;
            } else {
              trString +=
                `</tr><tr data-room="${slot.roomno.toLowerCase()}">
                <td>${slot.roomno}</td>
                <td class="draggableTd" id="td${slot.id}" data-id="${slot.id}" data-eventName="${slot.eventName}" data-eventwithtime="${slot.eventName != 0 ? slot.eventName : 'Not Alloted'} |${slot.slotTime}" data-facultyId="${slot.facultyId}" data-slot="${slot.slotName}" data-program="${slot.bookedProgramId}" data-acadSession="${slot.bookedAcadSession}" data-eventType="${slot.eventType}" data-eventId="${slot.eventId}" data-bookedDiv="${slot.bookedDiv}" data-uuid="${slot.uuid}" draggable="${slot.eventName != 0 ? 'true' : 'false'}">${slot.eventName != 0 ? slot.eventName : 'Not Alloted'} |${slot.slotTime} ${slot.facultyType == 1 ? '<span class="facultyTypeV">V</span>' : ''} ${slot.facultyType == 0 ? '<span class="facultyTypeC">C</span>' : ''}</td>`;
            }
            roomNo = slot.roomno;
          }
          trString += `</tr>`;

          $('.time-table-daywise thead').html(thString);
          $('.time-table-daywise tbody').html(trString);

          addSlotAttr();
          dyModalFnc();

          let filterArr = $('#select-room-filter').val()

          if (filterArr.length > 0) {
            $('#allotedTimeSlotData tbody tr').addClass('d-none')
          }

          for (let room of filterArr) {
            $(`#allotedTimeSlotData tbody tr[data-room= '${room.toLowerCase()}']`).removeClass('d-none')
          }

        },
        error: function (result) {
          alert('error')
        }
      })
    })

    // SCHOOL SLOT TIMING
    //getroomtimesheet modal call

    function dyModalFnc() {

      $("#allotedTimeSlotData").on('click', 'tbody td:not(:first-child)', function (e) {
        e.preventDefault()
        droppedId = $(this)
        thisVal = $(this).attr('data-eventwithtime')
        lastSelTd = $(this)
        console.log("Slot Name selected=====>> ", lastSelTd.attr('data-slot'))
        thisSlotG = $(this).attr('id')
        tdSlot = $(this).attr('data-slot')
        tdTableId = $(this).attr('data-id')

        console.log("tdSlot ===>>> ", tdSlot)

        let dayAsked = $('.table-tab').find('.active').attr('valueattr')
        roomNumber = $(this).parent().attr('data-room')
        $('.thisTdSlot').html(thisVal)
        var cuurentNotAllotedName = thisVal.split('|')
        console.log('thisVal', thisVal, ' dayname  =>', dayAsked, 'slottiming => ', cuurentNotAllotedName[1]
          .trim())

        console.log("clicked check==> ", cuurentNotAllotedName[0])
        if (cuurentNotAllotedName[0].trim().toLowerCase().includes("not alloted")) {
          $('#editSimulatedModalDataTitle').text("Update Data")
        } else {

          console.log("programId==>>", lastSelTd.attr('data-program'))
          console.log("acadSession==>>", lastSelTd.attr('data-acadsession'))
          console.log("moduleId==>>", lastSelTd.attr('data-eventid').split('-')[0].trim())
          console.log("division==>>", lastSelTd.attr('data-bookeddiv'))

          $('#editSimulatedModalDataTitle').text("Drop Slot")
          $.ajax({
            type: 'POST',
            url: '/roomdata/getAllocatedFacultyStatus',
            dataType: 'json',
            data: {
              programId: lastSelTd.attr('data-program'),
              acadSession: lastSelTd.attr('data-acadsession'),
              moduleId: lastSelTd.attr('data-eventid').split('-')[0].trim(),
              bookedDiv: lastSelTd.attr('data-bookeddiv')
            },
            success: data => {
              if (data.cause == "permission denied") {
							window.location = data.reqUrl
							return
				      }
              console.log("FacultyList===>>> ", data)
              let facultyList = data.facultyStatus;
              let facultyDivList = data.facultyStatusDiv;
              let othersFacultyList = data.othersFacultyStatus;
              let facultyCard = ``;
              let otherFacultyCard = ``;
              if (facultyList.length > 0) {

                for (let faculty of facultyList) {
                  facultyCard += `<li>
                  <div id="heading${faculty.facultyId}">
                      <p class="mb-0 btn-link" data-toggle="collapse" data-target="#collapse${faculty.facultyId}" aria-expanded="true" aria-controls="collapse${faculty.facultyId}">
                        ${faculty.facultyName} ( ${faculty.type == 0 ? 'Core' : ''}${faculty.type == 1 ? 'Visiting' : ''} ): ${faculty.lecCount} lectures allocated.
                      </p>
                  </li>
                  <div id="collapse${faculty.facultyId}" class="collapse mb-2" aria-labelledby="heading${faculty.facultyId}" data-parent="#accordionFacultyStatus">
                    <p>Total Lecture Left: ${faculty.lecLeft}</p>`;
                  if (facultyDivList.length > 0) {
                    facultyCard +=
                      `<table class="table-bordered text-center"><thead><tr><th>&nbsp Division &nbsp</th><th>&nbsp Lectures&nbsp </th></tr></thead><tbody>`

                    for (let factDiv of facultyDivList) {
                      if (faculty.facultyId == factDiv.facultyId)
                        facultyCard +=
                        `<tr><td> ${factDiv.bookedDiv} </td><td> ${factDiv.lecCount} </td></tr>`
                    }
                    facultyCard += `</tbody></table>`;
                  }
                  facultyCard += `</div>`;
                }

                for (let oFaculty of othersFacultyList) {
                  otherFacultyCard +=
                    `<li>${oFaculty.facultyName} ( ${oFaculty.type == 0 ? 'Core' : ''}${oFaculty.type == 1 ? 'Visiting' : ''} ): ${oFaculty.lecCount} lectures allocated.</li>`;
                }
                let assignedFacultiesHtml =
                  `<h6>Assigned faculties for the selected lecture:</h6>
                  <ul class="accordion" id="accordionFacultyStatus">
                    ${facultyCard}
                  </ul>`

                if (othersFacultyList.length > 0) {
                  assignedFacultiesHtml += `<h6>Other faculties for the selected lecture:</h6>
                    <ul>
                    ${otherFacultyCard}
                    </ul>`
                }

                $(`#assignedFaculties`).html(assignedFacultiesHtml)

              } else {
                $(`#assignedFaculties`).html(`<h6>Assigned faculties for the selected lecture:</h6>
                    <ul>
                      <li>No faculty is assigned yet.</li>
                    </ul>`)
              }

            }
          })
        }

        console.log("Calling AJAX REQ=====>> ", cuurentNotAllotedName[1].trim())
        $.ajax({
          type: 'GET',
          url: '/roomdata/getpendinglist/',
          dataType: 'json',
          success: function (resp) {
            if (resp.cause == "permission denied") {
							window.location = resp.reqUrl
							return
				      }
            console.log("Data is being received")
            let status = resp.status
            if (status === 'showManualAllocation') {
              console.log("Manual Allocation Modal Opens Here")
              let acadList = resp.data
              console.log(acadList)
              let acadAjax = "<option disabled selected value>--Select Acad Session--</option>"
              let manualProgramAjax = "<option selected value='" + acadList[0].programId + "'>" +
                acadList[0].programId + "</option>"

              for (let acadSession of acadList) {
                acadAjax += "<option value='" + acadSession.acadSession + "'>" + acadSession.acadSession +
                  "</option>"
              }
              manualProgram.html(manualProgramAjax);
              manualAcadSessionSel.html(acadAjax);
              $('.allocationFor .room').html(roomNumber)
              $('.allocationFor .slot').html(cuurentNotAllotedName[1])

              


              if ($('.thisTdSlot').html().slice(0, 11) !== "Not Alloted") {
                $('#editSimulatedModalDataTitle').text("Update Data")
                $("#manualDropSlotModal").modal('show')
                // $('.alertBody').removeClass('d-none')
                // $('.alert .alert-text').html(
                //   "The slot is already occupied. Please allocate to an empty slot.")
                // $('.manualAllocationBadge').removeClass('d-none')
              } else {
                $('#manualAllocationModal').modal('show')
                $('#editSimulatedModalDataTitle').text("Drop Slot")
              }
            } else {
              var resultSet = resp.data
              var ajaxData = "<option selected disabled>Select SlotFor</option>";
              for (let slotFor of resultSet) {
                ajaxData +=
                  `<option value="${slotFor.slotAllotedFor}" data-moduleId="${slotFor.moduleId}" data-programId="${slotFor.programId}" data-acadsession="${slotFor.acadSession}" data-division="${slotFor.division}" data-slot="${slotFor.slot}"> ${slotFor.slotAllotedFor} </option>`
              }
              $("#slotForAllotmentPicker").html(ajaxData)
              //CONDITION TO SHOW RESCHEDULE 
              console.log('This td data====>>>>>', $('.thisTdSlot').html())
              
              if ($('.thisTdSlot').html().slice(0, 11) !== "Not Alloted") {
                $('#editAllotedTimeSlotData .slotPicker, #editAllotedTimeSlotData #allocateSlotInitial, #editAllotedTimeSlotData .slotPickerGroup')
                  .hide()
                $('#initialDropSlot, #changeFaculty').show()
                setTimeout(function () {
                  $('body').find('#editAllotedTimeSlotData .select2').addClass('d-none');
                }, 500)
                console.log('--------------------------------->' + $('.thisTdSlot').html().slice(0, 11))
              } else {
                console.log('--------------------------------->' + $('.thisTdSlot').html().slice(0, 11))
                $('#editAllotedTimeSlotData .slotPicker, #editAllotedTimeSlotData #allocateSlotInitial')
                  .show()
                $('#initialDropSlot, #changeFaculty, #editAllotedTimeSlotData .slotPickerGroup').hide()
                $('body').find('#editAllotedTimeSlotData .select2').removeClass('d-none');
              }
              $('#editAllotedTimeSlotData').modal('show')
            }
          },
          error: function (error) {
            console.log("Error=====> error")
          }
        })
      })
    }
    dyModalFnc()

    //function for initial drop


    // DROPPED SLOTS SHOW OR HIDE

    $('#toggleDroppedSlots').click(function () {
      $('.droppedSlots').css({
        "transition": "1s",
        "right": "0px"
      })
      $('body').append("<div class='cust-backdrop'></div>").show()
    })

    $('.closeDroppedSlots').click(function () {
      $('.droppedSlots').css({
        "transition": "1s",
        "right": "-500px"
      })
      $('.cust-backdrop').hide()
    })

    //MANUAL DRAWER ANIMATION
    $('#manualDrawer').click(function () {
      $('.manualSlots').css({
        "transition": "1s",
        "right": "0px"
      })
      $('body').append("<div class='cust-backdrop'></div>").show()

      $.ajax({
        type: "GET",
        url: "/roomdata/checkManualAllocationTable",
        dataType: "json",
        success: function (data) {
          if (data.cause == "permission denied") {
							window.location = data.reqUrl
							return
				  }
          console.log("Data fetched", data)
          let manualList = data.data
          let ajaxData = ""
          let slotType
          for (let result of manualList) {
            if (result.lecPerWeek > 0) {
              slotType = "TH"
            } else if (result.practicalPerWeek) {
              slotType = "PR"
            }
            ajaxData += "<li>Program: " + result.programId + " - " + result.moduleName + " - " +
              slotType + " - " + result.division + " - " + result.acadSession + "</li>"
          }

          $(".manualSlotsBody ul").html(ajaxData)
        }
      })

    })

    $('.closeManualSlots').click(function () {
      $('.manualSlots').css({
        "transition": "1s",
        "right": "-500px"
      })
      $('.cust-backdrop').hide()
    })


    //on slotForAllotmentPicker change in value
    $('#slotForAllotmentPicker').change(function () {

      let $thisOption = $('#slotForAllotmentPicker option:selected')

      //get value for selected slotFor from initalPendingTable
      $.ajax({
        type: 'POST',
        url: '/roomdata/pendingdata/',
        dataType: 'json',
        data: {
          slotFor: $("#slotForAllotmentPicker").val().replace(/&amp;/g, '&'),
          slot: tdSlot,
          dayname: $('.table-tab').find('.active').attr('valueattr'),
          programId: $thisOption.attr('data-programid'),
          acadSession: $thisOption.attr('data-acadsession'),
          moduleId: $thisOption.attr('data-moduleid'),
          bookedDiv: $thisOption.attr('data-division')
        },
        success: function (res) {
          if (res.cause == "permission denied") {
							window.location = res.reqUrl
							return
				  }
          console.log('res', res.data)
          console.log('faculty status====>>>. ', res.facultyStatus)

          let data = res.data
          let ajaxOption = `<option selected disabled>--Select Faculty--</option>`
          if (data.length > 0) {
            for (let faculty of data) {
              ajaxOption +=
                `<option value= "${faculty.facultyId}" name="${faculty.cid}" faculty-name="${faculty.facultyName}">${faculty.facultyName}/${faculty.facultyId}</option>`
            }
          } else {
            ajaxOption = "<option value selected disabled>--Faculty Not Available--</option>"
          }
          $("#FacultyForModule").html(ajaxOption)

          let facultyList = res.facultyStatus

          if (facultyList.length > 0) {

            let facultyLi = ``;

            for (let faculty of facultyList) {
              facultyLi += `<li>${faculty.facultyName}: ${faculty.lecCount} lectures allocated.</li>`
            }

            let assignedFacultiesHtml =
              `<h6>Assigned faculties for the selected lecture:</h6>
              <ul>
                ${facultyLi}
              </ul>`

            $(`#assignedFaculties`).html(assignedFacultiesHtml)

          } else {
            $(`#assignedFaculties`).html(`
            <h6>Assigned faculties for the selected lecture:</h6>
              <ul>
                <li>No faculty is assigned yet.</li>
              </ul>`)
          }


        }

      })
    })

    //on allocate button click

    $('#allocateSlotInitial').click(function (e) {
      e.preventDefault()


      if ($("#slotForAllotmentPicker").val()) {

        let facultySelected = $('#FacultyForModule').val();

        if (facultySelected !== null) {
          $(".loaderBody").removeClass('d-none');
          let dataSlot = lastSelTd.attr('data-slot');
          let currentVal = thisVal.includes('Not Alloted') ? `${thisVal.split('|')[0].trim()}|${dataSlot}` :
            thisVal;

          console.log("current val====>> ", currentVal)

          socket.emit('allocateSlot', {
            toBeAllocated: $("#slotForAllotmentPicker").val().replace(/&amp;/g, '&'),
            selectedRoomno: roomNumber,
            dataWithoutTime: $("#slotForAllotmentPicker").val().split('|')[0],
            daySelected: $('.table-tab').find('.active').attr('valueattr'),
            currentValue: currentVal,
            slotName: tdSlot,
            facultySelected: facultySelected,
            cid: $("#FacultyForModule option:selected").attr('name'),
            facultyName: $("#FacultyForModule option:selected").attr('faculty-name'),
            slug: "<%- slug %>",
            thisSlotG: thisSlotG,
            tdTableId: tdTableId
          })
          $('#editAllotedTimeSlotData').modal('hide')
        } else {
          $(".alertBody").removeClass("d-none")
          $(".alert-text").html("Please select a faculty.")
        }
      } else {
        $(".alertBody").removeClass("d-none")
        $(".alert-text").html("Please select 'Slot For' option.")
      }
    })

    socket.on('allocateSlotEmit', (data) => {
      console.log("Emited Data", data)
      let fetchedData = data.data
      let result6 = fetchedData.result6
      let rsbData = fetchedData.rsbData
      $(".loaderBody").addClass('d-none');
      console.log("Data Count", fetchedData.dataCount)
      console.log("Room No==> ", result6.roomno)
      if (fetchedData.dataCount === 1) {
        //Changed By Hiren
        $(`#allotedTimeSlotData tbody #${fetchedData.thisSlotG}`).html(
          `${result6.Orders} ${rsbData.facultyType == 1 ? '<span class="facultyTypeV">V</span>' : ''} ${rsbData.facultyType == 0 ? '<span class="facultyTypeC">C</span>' : ''}`
        ).attr({
          'data-eventname': rsbData.eventName,
          'data-eventwithtime': result6.Orders,
          'data-facultyid': rsbData.facultyId,
          'data-program': rsbData.bookedProgramId,
          'data-acadsession': rsbData.bookedAcadSession,
          'data-eventtype': rsbData.eventType,
          'data-eventid': rsbData.eventId,
          'data-bookeddiv': rsbData.bookedDiv,
          'draggable': true
        });
      } else {
        console.log("Slot Swap Failed! Something went wrong.")
      }
    })

    $("#changeFaculty").click(function () {
      $("#editAllotedTimeSlotData .slotPickerGroup").show();
      $.ajax({
        type: "POST",
        url: "/roomdata/changeFaculty",
        dataType: "JSON",
        data: {
          slotData: $(".thisTdSlot").html().replace(/&amp;/g, '&'),
          dayName: $('.table-tab').find('.active').attr('valueattr')
        },
        success: function (data) {
          if (data.cause == "permission denied") {
							window.location = data.reqUrl
							return
				  }
          console.log("Faculty List", data)
          let facultyList = data.facultyList;
          let facultyAjax = "<option value selected disabled>--Select Faculty--</option>"

          for (let faculty of facultyList) {
            facultyAjax += "<option value='" + faculty.cId + "' data-moduleId='" + faculty.moduleId +
              "' data-facultyId='" + faculty.facultyId + "'>" + faculty.facultyName + "/" + faculty
              .facultyId + "</option>"
          }

          $("#changeFacultySlot").html(facultyAjax)

        }
      })
    })

    $("#saveChangedFaculty").click(function () {
      let cId = $("#changeFacultySlot").val();
      if (cId !== null) {
        $("#editAllotedTimeSlotData").modal('hide')
        $(".loaderBody").removeClass("d-none")

        socket.emit('saveChangedFaculty', {
          slotData: $(".thisTdSlot").html().replace(/&amp;/g, '&'),
          dayName: $('.table-tab').find('.active').attr('valueattr'),
          cId: cId,
          thisSlotG: thisSlotG,
          slug: "<%- slug %>"
        })
      } else {
        $(".alert-text").html("Please select a faculty.");
        $(".alertBody").removeClass("d-none");
      }
    })

    socket.on('saveChangedFacultyEmit', async function (data) {
      $(`#allotedTimeSlotData tbody #${data.thisSlotG}`).html(data.slotData)
      $(`#allotedTimeSlotData tbody #${data.thisSlotG}`).attr('data-eventwithtime', data.slotData)
      $(`#allotedTimeSlotData tbody #${data.thisSlotG}`).attr('data-facultyid', data.facultyId)
      $(".loaderBody").addClass("d-none")
    })

    $('#initialDropSlot, #manualDropSlotBtn').click(function () {
      console.log("EMITTED VALUE", roomNumber, thisSlotG)
      socket.emit('drop', $(".thisTdSlot").html().replace(/&amp;/g, '&'), $('.table-tab').find('.active').attr(
        'valueattr'), roomNumber, thisSlotG, "<%- slug %>");
      $("#manualDropSlotModal").modal('hide')
      $(".loaderBody").removeClass("d-none")
    })

    socket.on('eventDropped', async function (data) {
      console.log("RECEIVED EMITTED VALUE", data.roomno, data.thisSlotG)
      console.log("Slot Dropped Manually")
      console.log(data)
      let pendingListTop = await data.pendinglist[0]
      let socketData = ""
      var ajaxData = "<option selected disabled>Select SlotFor</option>";
      for (let value of data.pendinglist) {
        socketData += "<li>" + value.slotAllotedFor + "</li>"
        ajaxData += "<option value='" + value.slotAllotedFor + "'>" + value.slotAllotedFor + "</option>"
      }
      $('.droppedSlotsBody ul').html(socketData)
      $("#slotForAllotmentPicker").html(ajaxData)

      console.log("DATA LIST===> ", data)

      //droppedId.html(data.slotname)
      new Promise((resolve) => {
        resolve(
          $(`#allotedTimeSlotData tbody #${data.thisSlotG}`).html(data.slotname),
          $(`#allotedTimeSlotData tbody #${data.thisSlotG}`).attr({
            'data-eventname': data.slotname,
            'data-eventwithtime': data.slotname,
            'data-facultyid': '0',
            'data-program': '0',
            'data-acadsession': '0',
            'data-eventtype': 'null',
            'data-eventid': '0',
            'data-bookeddiv': '0',
            'draggable': false
          }),
          $('.thisTdSlot').attr('isEmpty', true),
          $('#editAllotedTimeSlotData').modal('hide')
        )
      }).then(function () {
        $(".loaderBody").addClass("d-none")
      })

      //data.slotname has value after slot is dropped
    })

    //ON DRAWER OPEN
    $('#toggleDroppedSlots').click(function () {
      socket.emit('drawerOpen', "<%- slug %>")
    })

    socket.on('drawerData', (dataData) => {
      let drawerList = ""
      for (let data of dataData) {
        drawerList += "<li>" + data.slotAllotedFor + "</li>"
      }
      $('.droppedSlotsBody ul').html(drawerList)
    })

    $('#generateTimesheet').click(function () {
      console.log("Clicked")
      $('.loaderBody').removeClass('d-none')

      socket.emit("freezeTimesheet", {
        slug: "<%- slug %>"
      })

    })

    socket.on("timesheetFreezed", async (data) => {
      console.log(data)
      $('.loaderBody').addClass('d-none')
      location.reload()
    })

    manualAcadSessionSel.change(function () {
      manualDivSel.html('<option selected disabled value>--Select Division--</option>').attr('disabled', true)
      manualModuleNameSel.html('<option selected disabled value>--Select Module--</option>').attr('disabled',
        true)
      manualFacultySel.html('<option selected disabled value>--Select Faculty--</option>').attr('disabled',
        true)
      $.ajax({
        type: 'POST',
        url: '/roomdata/fetchDivisons',
        dataType: 'json',
        data: {
          acadSession: manualAcadSessionSel.val()
        },
        success: function (data) {
          if (data.cause == "permission denied") {
							window.location = data.reqUrl
							return
				  }
          console.log('Divisions fetched', data)
          let divisionList = data.data
          console.log(divisionList)
          let divAjax = "<option selected disabled value>--Select Division--</option>"
          for (let div of divisionList) {
            divAjax += "<option value='" + div.division + "'>" + div.division + "</option>"
          }
          console.log(divAjax)
          manualDivSel.html(divAjax)
          manualDivSel.attr('disabled', false)
        }
      })
    })

    manualDivSel.change(function () {
      manualModuleNameSel.html('<option selected disabled value>--Select Module--</option>').attr('disabled',
        true)
      manualFacultySel.html('<option selected disabled value>--Select Faculty--</option>').attr('disabled',
        true)
      $.ajax({
        type: 'POST',
        url: '/roomdata/fetchModuleName',
        dataType: 'json',
        data: {
          acadSession: manualAcadSessionSel.val(),
          division: manualDivSel.val(),
          roomno: $('.allocationFor .room').html()
        },
        success: function (data) {
          if (data.cause == "permission denied") {
							window.location = data.reqUrl
							return
				  }
          console.log('Module Name fetched', data)
          let moduleList = data.data
          console.log(moduleList)
          let moduleAjax = "<option selected disabled value>--Select Module--</option>"
          for (let moduleName of moduleList) {
            moduleAjax += "<option value='" + moduleName.moduleId + "' name = '" + moduleName
              .uModuleId +
              "'>" + moduleName.moduleName +
              "</option>"
          }
          console.log(moduleAjax)
          manualModuleNameSel.html(moduleAjax)
          manualModuleNameSel.attr('disabled', false)
        }
      })
    })

    manualModuleNameSel.change(function () {
      manualFacultySel.html('<option selected disabled value>--Select Faculty--</option>').attr('disabled',
        true)
      $.ajax({
        type: 'POST',
        url: '/roomdata/fetchFaculty',
        dataType: 'json',
        data: {
          slot: tdSlot,
          moduleId: manualModuleNameSel.val(),
          selectedDayName: $('.table-tab').find('.active').attr('valueattr'),
          manualProgram: manualProgram.val()
        },
        success: function (data) {
          if (data.cause == "permission denied") {
							window.location = data.reqUrl
							return
				  }
          console.log('Faculty fetched', data)
          let facultyList = data.data
          console.log(facultyList)
          let facultyAjax = "<option selected disabled value>--Select Faculty--</option>"
          for (let faculty of facultyList) {
            facultyAjax += "<option value='" + faculty.facultyId + "'>" + faculty.facultyName + "/" +
              faculty.facultyId +
              "</option>"
          }
          manualFacultySel.html(facultyAjax)
          manualFacultySel.attr('disabled', false)
        }
      })
    })

    $("#manualAllocate").click(function () {
      if (manualAcadSessionSel.val() !== null && manualDivSel.val() !== null && manualModuleNameSel.val() !==
        null && manualFacultySel.val() !== null) {
        $(".loaderBody").removeClass("d-none")
        socket.emit('allocateManually', {
          roomno: $('.allocationFor .room').html(),
          slot: tdSlot,
          uModuleId: $('#manualModuleName option:selected').attr('name'),
          selectedDayName: $('.table-tab').find('.active').attr('valueattr'),
          facultyId: manualFacultySel.val(),
          slotName: droppedId.html(),
          thisSlotG: thisSlotG,
          slug: "<%- slug %>"
        })
      } else {
        $(".alertBody").removeClass('d-none')
        $(".alert-text").html("Opps! You have to select all the fields before allocating.")
      }
    })

    socket.on('emitSlotName', function (data) {
      console.log("EMITTED DATA", data)
      $(`#allotedTimeSlotData tbody #${data.thisSlotG}`).html(data.fetchedResult).attr('draggable', true)
      $("#manualAllocationModal").modal('hide')
      $(".loaderBody").addClass("d-none")
    })

    $('#manualAllocationModal').on('hidden.bs.modal', function (e) {
      manualDivSel.html('<option selected disabled value>--Select Division--</option>').attr('disabled', true)
      manualModuleNameSel.html('<option selected disabled value>--Select Module--</option>').attr('disabled',
        true)
      manualFacultySel.html('<option selected disabled value>--Select Faculty--</option>').attr('disabled',
        true)
    })

    $('#editAllotedTimeSlotData').on('hidden.bs.modal', function (e) {
      $("#changeFacultySlot, #FacultyForModule").html(
        "<option selected disabled value>--Select Faculty--</option>")
      $(this).find(".select2").addClass("d-none");
      $("#assignedFaculties").html("");
    })

    $('#editAllotedTimeSlotData').on('shown.bs.modal', function (e) {
      $(this).find(".select2").removeClass("d-none");
    })

    $('.modalSelect2').select2({
      dropdownParent: $('#editAllotedTimeSlotData')
    });


    //draggable code start
    function initDraggable() {
      console.log("====>>> initializing draggable")
      let dragTd, targetTd, dragindex;
      let dragTdData = "";

      $('tbody').on('mousedown', '.draggableTd', function () {
        document.getSelection().removeAllRanges()
      })

      $('tbody').on('dragstart', '.draggableTd', function (e) {
        dragTd = $(e.target);
        $('.dragTd').removeClass('dragTd')
        dragTd.addClass('dragTd')
      })

      $('tbody').on('drop', '.draggableTd', function (e) {
        e.preventDefault();
        targetTd = $(e.target);

        $('.targetTd').removeClass('targetTd');
        targetTd.addClass("targetTd");

        if (dragTd.attr("id") !== targetTd.attr("id")) {

          console.log(" dragTd.html()==>> ", dragTd.html())
          socket.emit('swapLecture', {
            fromId: dragTd.attr('data-id'),
            toId: targetTd.attr('data-id'),
            slug: '<%- slug %>',
            dragTdId: dragTd.attr('id'),
            targetTdId: targetTd.attr('id'),
            dragEventName: dragTd.attr('data-eventname'),
            dragFacultyId: dragTd.attr('data-facultyid'),
            dragProgram: dragTd.attr('data-program'),
            dragAcadSession: dragTd.attr('data-acadsession'),
            dragEventType: dragTd.attr('data-eventtype'),
            targetEventName: targetTd.attr('data-eventName'),
            targetFacultyId: targetTd.attr('data-facultyid'),
            targetProgram: targetTd.attr('data-program'),
            targetAcadSession: targetTd.attr('data-acadsession'),
            targetEventType: targetTd.attr('data-eventtype')
          })

        }
      })


      socket.on('lectureSwapped', async data => {
        $('.alertBody .alert-text').html(data.msg)
        $('.alertBody').removeClass('d-none');

        console.log("lectureSwapped: ", data)

        let dragTd = $(`#${data.dragTdId}`);
        let targetTd = $(`#${data.targetTdId}`);

        if (data.isSwapped == 1) {
          targetTd.html(
            `${data.dragTdHtml} ${data.dragFacultyType == 1 ? '<span class="facultyTypeV">V</span>' : ''} ${data.dragFacultyType == 0 ? '<span class="facultyTypeC">C</span>' : ''}`
          ).attr({
            'data-eventname': data.dragEventName,
            'data-eventwithtime': data.dragTdHtml,
            'data-facultyid': data.dragFacultyId,
            'data-program': data.dragProgram,
            'data-acadsession': data.dragAcadSession,
            'data-eventtype': data.dragEventType,
            'data-eventid': data.dragEventId,
            'data-bookeddiv': data.dragBookedDiv,
            'draggable': true
          });
          dragTd.html(
            `${data.targetTdVal} ${data.targetFacultyType == 1 ? '<span class="facultyTypeV">V</span>' : ''} ${data.targetFacultyType == 0 ? '<span class="facultyTypeC">C</span>' : ''}`
          ).attr({
            'data-eventname': data.targetEventName,
            'data-eventwithtime': data.targetTdVal,
            'data-facultyid': data.targetFacultyId,
            'data-program': data.targetProgram,
            'data-acadsession': data.targetAcadSession,
            'data-eventtype': data.targetEventType,
            'data-eventid': data.targetEventId,
            'data-bookeddiv': data.targetBookedDiv,
          });
          if (data.targetEventName == '0') {
            dragTd.attr('draggable', false)
          }
        }
      })


      $('tbody').on('dragover', '.draggableTd', function (e) {
        e.preventDefault();
      })
    }
    //draggable code end


    // DOCUMENT READY ENDS HERE
  })
</script>


<%- include("../partials/footerEnd") %>