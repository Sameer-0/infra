<%- include("../partials/head") %>
<link rel="stylesheet" href="/css/simpleAlert.css">
<%- include("../partials/leftSidebar") %>
<%- include("../partials/header") %>
<!--Notificaion icon-->
<!--HEADER END-->

<div class="main-content">
    <div class="breadcrumbs-container">

        <ul class="breadcrumb">
            <% if(breadcrumbs){%> <% for (let crumbs of breadcrumbs){%>
            <li><a href="<%- crumbs.url%>"><%- crumbs.name%></a></li>
            <%} }%>
        </ul>
    </div>
    <!--DASHBOARD CONTENT START-->
    <div class="row my-3 gx-3 gy-3 row1-data">

        <div class="col-xl-2 col-lg-4 col-md-6">
            <a href="/admin/courseworkload">
                <div class="card row1-data-card text-center">
                    <div class="card-body d-flex flex-column align-items-center justify-content-center">
                        <img src="/icon_imgs/fetchcourse.png" alt="">
                        <p class="fw-normal pt-1">FETCH COURSE WORKLOAD</p>
                    </div>
                </div>
            </a>
        </div>

        <div class="col-xl-2 col-lg-4 col-md-6">
            <a href="/admin/courseworkload/workload">
                <div class="card row1-data-card text-center">
                    <div class="card-body d-flex flex-column align-items-center justify-content-center">
                        <img src="/icon_imgs/biology.png" alt="">
                        <p class="fw-normal pt-1">COURSE WORKLOAD</p>
                    </div>
                </div>
            </a>
        </div>

        <!-- <div class="col-xl-2 col-lg-4 col-md-6">
            <a href="/admin/courseDayRoomPreference">
            <div class="card row1-data-card text-center">
                <div class="card-body d-flex flex-column align-items-center justify-content-center">
                    <img src="/icon_imgs/prefernece.png" alt="">
                        <p class="fw-normal pt-1">COURSE PREFERENCE</p>
                    </div>
            </div>
        </a>
        </div> -->
    </div>

    <div class="card table-card mt-3">
        <div class="card-header table-card-header text-uppercase d-flex align-items-center justify-content-between">
            <div>
                <h5>MODULE ABBR UPDATE</h5>
            </div>
            <!-- <div class="table-searchbar-container">
                <button type="button"><i class="fas fa-search"></i> </button><input
                type="search" id="searchkeyword" placeholder="Enter keywords" class="table-searchbar">
            </div> -->
        </div>


        <div class="row my-2 ms-2 me-2">
            <div class="col-md-2">
                <label>Show Entry</label>
                <select class="form-select" id="changeEntry">
                    <%for(let page of locals.page_filter){%>
                       <option value="<%-page%>"><%-page%></option>
                    <%}%>
                </select>
            </div>
            <div class="col-md-3 mt-4">
                <select class="form-select form-control select2" id="programNameFilter">
                    <option selected>Select Program</option>
                    <%for(let prog of programList){%>
                    <option value="<%-prog.program_id%>"><%-prog.program_name%></option>
                    <%}%>
                </select>
            </div>
            <div class="col-md-4  mt-4">
                <select class="form-select form-control select2" id="sessionNameFilter">
                </select>
            </div>

            <div class="col-md-3  mt-4">
                <input type="search" id="searchkeyword" placeholder="Enter keywords" class="form-control">
            </div>

        </div>

        <div class="card-body table-responsive">
           <!-- <caption><span class="text-danger">Note:</span> In order to keep all intake the same, simply insert records in the first field and click on the checkbox. If the checkbox is unchecked, the records will be emptied.</caption> -->
            <table class="table table-bordered" id="courseWorkloadAbbrTable">
                <thead>
                    <th>Sr No.</th>
                    <th>Module Name</th>
                    <th>Module Code</th>
                    <th>Program Id</th>
                    <th>Program Code</th>
                    <th>Acad Session</th>
                    <th>Module Event Abbr</th>
                    <th>Module Event Abbr (30 CHAR)</th>


                </thead>
                <tbody>
                    <%
                        let count = 1
                        for(let course of courseWorkloadList) { %>
                    <tr>
                        <td><%- count++ %> <input type="hidden" class="form-control rounded-0" name="workloadlid"
                                value="<%-course.id %>"></td>
                        <td><%-course.module_name%></td>
                        <td><%-course.module_id%></td>
                        <td><%-course.program_id%></td>
                        <td><%-course.program_code%></td>
                        <td><%-course.acad_session%></td>
                        <td><%-course.module_event_abbr%></td>
                        <td><input type="search" class="form-control rounded-0 module_event_abbr" name="module_event_abbr"
                                    value="<%-course.module_event_abbr%>"></td>
                    </tr>
                    <% } %>
                </tbody>
            </table>
            <div class="d-flex justify-content-between">
                <div>
                    <p>Total entries:<%- pageCount %></p>
                </div>
                <div>
                    <!-- <button class="btn btn-success SaveAll"><span class="fa fa-pen"></span> Update </button> -->
                    <!-- <button class="btn btn-success SaveAll"><span class="fa fa-check"></span> Final Submit </button> -->
                </div>
            </div>
        </div>
        <div class="ms-auto me-2">
            <button class="btn btn-success SaveAll my-2"><span class="fa fa-pen"></span> Update </button>
        </div>
    </div>
</div>


<%- include("../partials/footer") %>
<script>
    $(document).ready(function () {
        let username = `<%- locals.userId %>`;
        $('.select2').select2();

        
        $("#courseWorkloadAbbrTable").on('input','.module_event_abbr',function(e){
            let limit = 30
            console.log('VALUES:::::::::::', $(this).val().slice(0,30))
            if($(this).val().length >= limit){ 
                $(this).css('border-color','red')
                $(this).val($(this).val().slice(0,30))
               // e.preventDefault()
               // showSuccess({status:0,message:'', description:"Abbr Length must not be greater than 30"})
            }else{
                $(this).css('border-color','')
                $(this).text(`<span>ABBR MUST BE 30 CHAR</span>`)
            }

        })

        //Filter APIS FOR INITIALCOURSE WORKLOAD
        $("#programNameFilter").on('change',function(){
            let programId = $(this).val()
            console.log('programId:::::::::::>',programId)
            let ApiObj = {
                type: 'POST',
                url: '/admin/courseworkload/workload/workload-by-programid',
                data: {
                    programId: programId
                },
                dataType: 'JSON'
            }
            ajaxApi(ApiObj).then(result => {
                console.log('result',result)
                let  sessionName = `<option value="" disabled>Select Session</option>`;
                if (result.sessionList.length > 0) {
                   
                    result.sessionList.forEach(element => {
                        sessionName +=`<option value="${element.acad_session_lid}" >${element.acad_session}</option>`;
                    });
                    AjaxtTable(result.workload)
                } else {
                    sessionName += `<option value="">No Session Found!</option>`;
                }
                $("#sessionNameFilter").html(sessionName).trigger('change')
            }).catch(error => {
                showError(error.responseJSON)
            })
        })

        $("#sessionNameFilter").on('change',function(){
            let programId = $("#programNameFilter").val()
            let sessionId = $(this).val()
            console.log('programID',programId,'SessionId',sessionId)
            let ApiObj = {
                type: 'POST',
                url: '/admin/courseworkload/workload/workload-by-programid-sessionid',
                data: {
                    programId: programId,
                    sessionId: sessionId
                },
                dataType: 'JSON'
            }
            ajaxApi(ApiObj).then(result => {
                    AjaxtTable(result.data)
            }).catch(error => {
                showError(error.responseJSON)
            })
        })



        //FILTER APIS
        $("#programName").on('change',function(){
            let programId = $(this).val()
            console.log('programId:::::::::::',programId)
            let ApiObj = {
                type: 'POST',
                url: '/admin/courseworkload/workload/session-by-programid',
                data: {
                    programId: programId
                },
                dataType: 'JSON'
            }
            ajaxApi(ApiObj).then(result => {
                console.log('result:::::::::::::',result)
                let sessionName = ``;
                if (result.data.length > 0) {
                    sessionName += `<option value="">Select Session</option>`;
                    result.data.forEach(element => {
                        sessionName +=`<option value="${element.sap_acad_session}">${element.sess_desc}</option>`;
                    });
                    // $('.add-faculty-date-time').removeAttr('disabled')
                } else {
                    sessionName += `<option value="">No Session Found!</option>`;
                }
                $("#open-course-modal  #sessionName").html(sessionName).trigger('change')
            }).catch(error => {
                showError(error.responseJSON)
            })
        })

        //FETCH COURSE LISTS
        $("#sessionName").on('change',function(){
            let sessionId = $(this).val()
            let programId = $("#programName").val()
           
            if(sessionId){
                //Call API
                console.log('ProgramName', programId,'SessionName',sessionId)
                let ApiObj = {
                type: 'POST',
                url: '/admin/courseworkload/workload/fetching-courses',
                data: {
                    programId: programId,
                    sessionId: sessionId
                },
                dataType: 'JSON'
            }
            ajaxApi(ApiObj).then(result => {
                console.log('result:::::::::::::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',result.data)

                let courseList = ``;

                if(result.data.length > 0){
                    result.data.forEach(function(coursewsdl){
                        courseList +=  `<li class="list-group-item my-1 border-top" data-clickable="true"
                                data-module-objid="${coursewsdl.module_objid}" data-course-wsdl-id="${coursewsdl.id}" data-module-name="${coursewsdl.module_desc}" data-program-name="${coursewsdl.program_name}" data-session-desc="${coursewsdl.sess_desc}">
                        ${ coursewsdl.module_desc}  ${ coursewsdl.program_name}  ${coursewsdl.sess_desc}</li>`
                    })

                    $("#open-course-modal .selectListCourse").html(courseList)
                }

            }).catch(error => {
                showError(error.responseJSON)
            })

            }
        })


        //SaveAll
        $(".SaveAll").on('click', function () {
            console.log('SaveAll::::::::::>>>')
            let courseElems = $('#courseWorkloadAbbrTable tbody tr');
            let courseCount = courseElems.length;
            let courseJSON = [];
            courseElems.each(function (index, elem) {
                let workloadlid = $(elem).find(`input[name='workloadlid']`).val()
                    let module_event_abbr = $(elem).find(
                    `input[name='module_event_abbr']`).val();
                if (index < courseCount - 1) {
                    let obj = {
                        id: workloadlid,
                        module_event_abbr: module_event_abbr
                    }
                    courseJSON.push(obj)
                } else {
                    let obj = {
                        id: workloadlid,
                        module_event_abbr: module_event_abbr
                    }
                    courseJSON.push(obj)
                }
            })

            console.log('Json::::::::::::', courseJSON)
            let ApiObj = {
                type: 'POST',
                url: '/admin/courseworkload/workload/module-abbr/update',
                data: {
                    inputJSON: JSON.stringify(courseJSON)
                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                console.log(result)
                showSuccess(result)
            }).catch(error => {
                showError(error.responseJSON)
            })
        })




        // SEARCH PROGRAM TYPE
        $('#searchkeyword').on('input', delay(function (e) {
            let keyword = $("#searchkeyword").val()
            $.ajax({
                type: "POST",
                url: "/admin/courseworkload/workload/search",
                data: {
                    keyword: keyword
                },
                success: function (data) {
                    console.log('response::::::::::::>>', data)
                    AjaxtTable(data.data)
                }
            })
        }, 500));

     


        //CHANGE ENTRIES
        $("#changeEntry").on('change',function(){
                let rowcount = $(this).val()
                $.ajax({
                type: "POST",
                url: "/admin/courseworkload/workload/show-entries",
                data: {
                    rowcount: rowcount
                },
                success: function (data) {
                    AjaxtTable(data.data) 
                }
            })
        })

        function AjaxtTable(workloadList) {
            let AjaxTable = `<table class="table custom_row table-bordered" id="courseWorkloadAbbrTable">
                <thead>
                    <th>Sr No.</th>
                    <th>Module Name</th>
                    <th>Module Code</th>
                    <th>Program Id</th>
                    <th>Program Code</th>
                    <th>Acad Session</th>
                    <th>Module Event Abbr</th>
                    <th>Module Event Abbr (30 CHAR)</th>
                </thead>
                <tbody>`;
            if (workloadList.length > 0) {
                let count = 1;
                for (let course of workloadList) {
                    AjaxTable +=
                        `<tr>
                            <td>${ count++} <input type="hidden" class="form-control rounded-0" name="workloadlid" value="${course.id }"></td>
                            <td>${course.module_name}</td>
                            <td>${course.module_id}</td>
                            <td>${course.program_id}</td>
                            <td>${course.program_code}</td>
                            <td>${course.acad_session}</td>
                            <td>${course.module_event_abbr}</td>
                            <td><input type="search" class="formpm2 logs-control rounded-0 module_event_abbr" name="module_event_abbr"
                                    value="${course.module_event_abbr}"></td>
                            </tr>`
                }
            } else {
                AjaxTable +=
                    ` <tr><td colspan="14">No Data Found</td></tr>`;
            }
            AjaxTable += `<tbody></table>`
            $("#courseWorkloadAbbrTable").html(AjaxTable);
        }






        function showError(errors) {
            console.log(errors);
            let simpleAlert = new SimpleAlert();
            let obj = {
                title: errors.description,
                message: "",
                type: 'alert-success',
                buttons: {
                    positive: {
                        text: "Okay",
                        action: function () {
                            document.querySelector('.simple-alert').remove();
                        }
                    },
                    negative: {
                        text: "Cancel",
                        action: function () {
                            alert('Negative')
                        }
                    }
                }
            }
            simpleAlert.alert(obj);
        }


        function showSuccess(errors) {
            console.log(errors);
            let simpleAlert = new SimpleAlert();
            let obj = {
                title: errors.description,
                message: "",
                type: 'alert-success',
                buttons: {
                    positive: {
                        text: "Okay",
                        action: function () {
                            document.querySelector('.simple-alert').remove();
                        }
                    },
                    negative: {
                        text: "Cancel",
                        action: function () {
                            alert('Negative')
                        }
                    }
                }
            }
            simpleAlert.alert(obj);
        }


        function showAlert(errors) {
            console.log(errors);
            let simpleAlert = new SimpleAlert();
            let obj = {
                title: errors.description,
                message: "",
                type: 'alert-success',
                buttons: {
                    positive: {
                        text: "Okay",
                        action: function () {
                            document.querySelector('.simple-alert').remove();
                        }
                    },
                    negative: {
                        text: "Cancel",
                        action: function () {
                            alert('Negative')
                        }
                    }
                }
            }
            simpleAlert.alert(obj);
        }

    })
</script>
<!-- Download Excel Workbook client side -->
<script type="text/javascript">
    var tableToExcel = (function() {
      var uri = 'data:application/vnd.ms-excel;base64,'
        , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>'
        , base64 = function(s) { return window.btoa(unescape(encodeURIComponent(s))) }
        , format = function(s, c) { return s.replace(/{(\w+)}/g, function(m, p) { return c[p]; }) }
      return function(table, name) {
        if (!table.nodeType) table = document.getElementById(table)
        var ctx = {worksheet: name || 'Worksheet', table: table.innerHTML}
        window.location.href = uri + base64(format(template, ctx))
      }
    })()
    </script>
<%- include("../partials/footerEnd") %>