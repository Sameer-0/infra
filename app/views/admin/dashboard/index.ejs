<%- include ('../partials/head') %>

<!-- PAGE LEVEL CSSS START -->

<!-- PAGE LEVEL CSSS END -->

<%- include ('../partials/leftSidebar') %>
<%- include ('../partials/header') %>

<style>
    .stage:nth-child(-n + <%- currentFormStep-1 %>) {
        background: #3cc58c;
        color: #fff;

    }

    .stage:nth-child(-n + <%- currentFormStep-1 %>)::before {
        border-left: 25px solid #3cc58c;
    }

    .stage:nth-child(<%- currentFormStep %>) {
        background: #ffc800;
        color: #000;

    }

    .stage:nth-child(<%- currentFormStep %>)::before {
        border-left: 25px solid #ffc800;
    }
</style>

<!-- MAIN-CONTENT -->
<div class="main-content">

    <% if (currentFormStep) { %>
    <%- include('./stepform.ejs') %>
    <% } else { %>
    <%- include('./dashboard.ejs') %>
    <% } %>

</div>
</main>


<%- include('../partials/footer') %>


<!-- PAGE LEVEL JS START -->


<script src="/js/adminDashboardscript.js"></script>

<script>
    $(document).ready(function () {

        let campu = `<%-campusList%>`;
        let date = `<%- acadCalender%>`;
        let acadDate = JSON.parse(date);
        let slotTime = `<%- slotTiming %>`
        let slotObj = JSON.parse(slotTime);
        let programType = JSON.parse(`<%- programTypeList%>`);
        console.log('programType::::::>', programType)

        let optionStartTime;
        let optionEndTime;
        let startDate;
        let endDate;
        let programTypeList;

        for (let obj of slotObj) {

            optionStartTime += `<option value="${obj.id}">${obj.start_time}</option>`;
        }

        for (let obj of slotObj) {

            optionEndTime += `<option value="${obj.id}">${obj.end_time}</option>`;
        }
        for (let obj of acadDate) {

            startDate += `<option value="${obj.id}">${obj.date}</option>`;
        }
        for (let obj of acadDate) {
            endDate += `<option value="${obj.id}">${obj.date}</option>`;
        }
        for (let obj of programType) { 
            programTypeList += `<option>${obj.name}</option>`
        }


        //DATA SELECT FOR ROOM
        $(".selectList").on('click', '.list-group-item', function () {

            console.log('yello')
            //remove current element when added to right sidebar
            // if ($(this).attr('data-clickable') == 'true') {
            $(".selectedList table tbody").append(
                `<tr data-clickable="true">
                        <td data-room-id="${$(this).attr('data-room-id')}">${$(this).text()}</td>
                        <td>
                            <select class="select2" name="startTime">${optionStartTime}</select>
                        </td>
                        <td>
                            <select class="select2" name="endTime">${optionEndTime}</select>
                        </td>
                        <td>
                            <select class="select2" name="startDate">${startDate}</select>
                        </td>
                        <td>
                            <select class="select2" name="endDate">${endDate}</select>
                        </td>
                        <td>
                            <i class="fas fa-trash-alt text-danger cursor-pointer clicktoremove"></i>
                        </td>
                    </tr>
                    `
            )
            // }

            $(this).attr('data-clickable', 'false');

            // $($(this)).fadeOut(300, function () {
            //     $($(this)).remove()
            // })

        })

        //Remove Element
        $(".selectedList").on('click', '.clicktoremove', function () {

            //     if ($(this).parent().parent().attr('data-clickable') == 'true') {
            //         $("#selectList").append(`<li class="list-group-item my-1 border-top" data-faculty-name="${$(this).parent().attr("data-faculty-name")}" data-faculty-id="${$(this).parent().attr("data-faculty-id")}" data-clickable="true"> ${$(this).parent().parent().find("td[data-value]").text()} 
            // </li>`)
            //     }

            $(this).parent().attr('data-clickable', 'false')

            $($(this)).fadeOut(300, function () {
                $($(this).parent().parent()).remove()
            })
        })

        //search 
        $('#searchItem').on('input', function () {
            let selectItems = $('.selectList li')

            var text = $('#searchItem').val().toLowerCase();

            for (let item of selectItems) {
                if (item.textContent.toLowerCase().indexOf(text) > -1) {
                    $(item).removeClass("d-none");
                } else {
                    $(item).addClass("d-none");
                }
            };
        })

        //search selected faculty
        $('#searchSelectedItem').on('input', function () {
            let selectedItems = $('.selectedList table tbody tr')
            var text = $('#searchSelectedItem').val().toLowerCase();
            console.log('text:::::::::', selectedItems)
            for (let item of selectedItems) {
                console.log('faculty:::::::::', item)
                if (item.textContent.toLowerCase().indexOf(text) > -1) {
                    $(item).removeClass("d-none");
                } else {
                    $(item).addClass("d-none");
                }
            };
        })


        //DATA SELECT FOR PROGRAM//
        $(".selectListProgram").on('click', '.list-group-item', function () {

            // remove current element when added to right sidebar
            // if ($(this).attr('data-clickable') == 'true') {
            console.log('appending:::::>>')
            $(".selectedListProgram table tbody").append(
                `<tr data-clickable="true">
                    <td data-value="${$(this).text()}">${$(this).text()}</td>
                    <td>
                        <select class="select2">${programTypeList}</select>
                    </td>
                    <td>
                        <i class="fas fa-trash-alt text-danger cursor-pointer clicktoremove"></i>
                    </td>
                </tr>
                    `
            )
            // }

            $(this).attr('data-clickable', 'false');

            $($(this)).fadeOut(300, function () {
                $($(this)).remove()
            })

        })

        //Remove Element
        $(".selectedListProgram").on('click', '.clicktoremove', function () {

            if ($(this).parent().parent().attr('data-clickable') == 'true') {

                $(".selectListProgram").append(`<li class="list-group-item my-1 border-top" data-faculty-name="${$(this).parent().attr("data-faculty-name")}" data-faculty-id="${$(this).parent().attr("data-faculty-id")}" data-clickable="true"> ${$(this).parent().parent().find("td[data-value]").text()} 
            </li>`)
            }

            $(this).parent().attr('data-clickable', 'false')

            $($(this)).fadeOut(300, function () {
                $($(this).parent().parent()).remove()
            })
        })

        //search 
        $('.searchItemProgram').on('input', function () {
            selectItems = $('.selectListProgram li')

            var text = $('.searchItemProgram').val().toLowerCase();

            for (let item of selectItems) {
                if (item.textContent.toLowerCase().indexOf(text) > -1) {
                    $(item).removeClass("d-none");
                } else {
                    $(item).addClass("d-none");
                }
            };
        })

        //search selected faculty
        $('.searchSelectedItemProgram').on('input', function () {
            let selectedItems = $('.selectedListProgram table tbody tr')
            var text = $('.searchSelectedItemProgram').val().toLowerCase();
            console.log('text:::::::::', selectedItems)
            for (let item of selectedItems) {
                console.log('faculty:::::::::', item)
                if (item.textContent.toLowerCase().indexOf(text) > -1) {
                    $(item).removeClass("d-none");
                } else {
                    $(item).addClass("d-none");
                }
            };
        })

        //DATA SELECT FOR FACULTY//

        //Step form Start
        let currentFormStep = 1;

        $('.step-form .step-form-body .active-form').removeClass('active-form').addClass('d-none');

        $(`.step-form .step-form-body .step[data-step=${currentFormStep}]`).removeClass('d-none').addClass(
            'active-form');

        function formStepNext() {
            currentFormStep++;

            console.log('clicked!!')
            $(`.step-form .stages .stage:nth-child(-n + ${currentFormStep-1})`).removeClass('pending').addClass(
                'submitted');
            $(`.step-form .stages .stage:nth-child(${currentFormStep})`).removeClass('pending').addClass(
                'active');

            $('.step-form .step-form-body .active-form').removeClass('active-form').addClass('d-none');
            $(`.step-form .step-form-body .step[data-step=${currentFormStep}]`).removeClass('d-none').addClass(
                'active-form');
            console.log(currentFormStep);
        }


        // NEXT STEP EVENT
        $('#next-step').on('click', function () {

            //SCROLL ON NEXT
            let ele = document.querySelector(`.arrow-pointer[data-step="${currentFormStep+1}"]`);
            console.log('stepformscroll', ele);

            ele.scrollIntoView({
                behavior: "smooth",
                inline: 'start'
            })


            formStepNext();
        })

        $('.import-room').on('click', function () {

            console.log('roomJSON::::>>>CLICKED');
            let roomElems = $('#add-more-room-table tbody tr');
            let roomCount = roomElems.length;
            let roomJson = [];
            roomElems.each(function (index, elem) {

                let roomId = $(elem).find(`td[data-room-id]`).attr('data-room-id');
                let startTimeId = $(elem).find(`select[name='startTime']`).val()
                let endTimeId = $(elem).find(`select[name='endTime']`).val()
                let startDateId = $(elem).find(`select[name='startDate']`).val()
                let endDateId = $(elem).find(`select[name='endDate']`).val()


                if (index < roomCount - 1) {
                    let obj = {
                        roomId: roomId,
                        startTimeId: startTimeId,
                        endTimeId: endTimeId,
                        startDateId: startDateId,
                        endDateId: endDateId,
                    }
                    roomJson.push(obj)
                } else {
                    let obj = {
                        roomId: roomId,
                        startTimeId: startTimeId,
                        endTimeId: endTimeId,
                        startDateId: startDateId,
                        endDateId: endDateId,
                    }
                    roomJson.push(obj)
                }

                console.log('roomJson::::::::::::::::::::>>>', roomJson)
            })

        })



        //Getting campus Bulding List
        $("#campus_lid").on('change', function () {
            let campus_lid = $(this).val()
            let ApiObj = {
                url: '/management/rooms/buildinglist',
                type: 'POST',
                data: {
                    campus_lid: campus_lid
                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                let buildingList =
                    `<select class="form-select" name="campus_lid" id="campus_lid">`;

                if (result.data.length > 0) {
                    buildingList +=
                        `<option disabled selected value="">--Select Campus--</option>`;
                    result.data.forEach(element => {
                        buildingList += `<option value="${element.id}">
                                ${element.building_name}
                            </option>`
                    });
                } else {
                    buildingList += `<option value="">
                                No Building Found!
                            </option>`
                }
                buildingList += `</select>`;
                $("#building_lid").html(buildingList)
            }).catch(error => {
                showError(error.responseJSON)
            })
        })

        $('.select2').select2({
            dropdownParent: $('#open-room-modal')
        });



        //Fetch course workload form SAP
        $(".fetchFromSAP").on('click', function () {
            let acadYear = $("#acadYear").val()
            let programLid = $("#programLid").val()
            let acadSessionLid = $("#acadSessionLid").val()
            console.log('Cllicke', acadYear, programLid, acadSessionLid)
            let ApiObj = {
                url: '/admin/courseworkload',
                type: 'POST',
                data: {
                    acadYear: acadYear,
                    programLid: programLid,
                    acadSessionLid: acadSessionLid
                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                console.log('Response ::::::::::::::::::::::', result.data)
            }).catch(error => {
                console.log('Error ::::::::::::::::::::::', error)
            })
        })

        //SaveAll
        $(".SaveAllCourse").on('click',function(){
            console.log('SaveAll::::::::::>>>')
            let courseElems = $('#add-more-courseWorkload-table tbody tr');
            let courseCount = courseElems.length;
            let courseJSON = [];
            courseElems.each(function (index, elem) {
                let workloadlid = $(elem).find(`input[name='workloadlid']`).val()
                let intake = $(elem).find(`input[name='intake']`).val()
                let student_per_division = $(elem).find(`input[name='student_per_division']`).val();
                let lec_per_week_per_division = $(elem).find(`input[name='lec_per_week_per_division']`).val();
                let practical_per_week_per_division = $(elem).find(`input[name='practical_per_week_per_division']`).val();
                let tutorial_per_week_per_division = $(elem).find(`input[name='tutorial_per_week_per_division']`).val();
                let workshop_per_week_per_division = $(elem).find(`input[name='workshop_per_week_per_division']`).val();
                let session_events_per_semester = $(elem).find(`input[name='session_events_per_semester']`).val();
                let module_type_lid = $(elem).find(`select[name='module_type_lid']`).val();
                let continuous = $(elem).find(`input[name='continuous']`).val();

                if (index < courseCount - 1) {
                    let obj = {
                        id: workloadlid,
                        intake: intake,
                        student_per_division: student_per_division,
                        lec_per_week_per_division: lec_per_week_per_division,
                        practical_per_week_per_division: practical_per_week_per_division,
                        tutorial_per_week_per_division: tutorial_per_week_per_division,
                        workshop_per_week_per_division: workshop_per_week_per_division,
                        session_events_per_semester: session_events_per_semester,
                        continuous: continuous,
                        module_type_lid:module_type_lid
                    }
                    courseJSON.push(obj)
                } else {
                    let obj = {
                        id:workloadlid,
                        intake: intake,
                        student_per_division: student_per_division,
                        lec_per_week_per_division: lec_per_week_per_division,
                        practical_per_week_per_division: practical_per_week_per_division,
                        tutorial_per_week_per_division: tutorial_per_week_per_division,
                        workshop_per_week_per_division: workshop_per_week_per_division,
                        session_events_per_semester: session_events_per_semester,
                        continuous: continuous,
                        module_type_lid:module_type_lid
                    }
                    courseJSON.push(obj)
                }
            })

            console.log('Json::::::::::::',courseJSON)
            let ApiObj = {
                type: 'PUT',
                url: '/admin/courseworkload',
                data: {
                    inputJSON: JSON.stringify(courseJSON)
                },
                dataType: 'JSON'
            }

            ajaxApi(ApiObj).then(result => {
                console.log(result)
                showSuccess(result)

            }).catch(error => {
                showError(error.responseJSON)
            })
        })

        function showError(errors) {
            let errorHtml = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <h3>Error</h3>
                    <p>${errors.description}</p>
                    <ul>`
            if (errors.data.length > 0) {
                $(errors.data).each(function (key, value) {
                    $.each(this, function (key, value) {
                        errorHtml +=
                            `<li>${key} ${value}</li>`
                    });
                });
            }
            errorHtml +=
                `</ul> <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> </div>`
                $("#errorHtml").html(errorHtml)
        }


        function showSuccess(errors) {
            let errorHtml = `<div class="alert alert-success alert-dismissible fade show" role="alert">
                    <h3>Success</h3>
                    <p>${errors.description}</p>
                    <ul>`
            if (errors.data.length > 0) {
                $(errors.data).each(function (key, value) {
                    $.each(this, function (key, value) {
                        errorHtml +=
                            `<li>${key} ${value}</li>`
                    });
                });
            }
            errorHtml +=
                `</ul> <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> </div>`
            $("#errorHtml").html(errorHtml)
        }

    })
</script>

<!-- PAGE LEVEL JS END -->
<%- include('../partials/footerEnd') %>